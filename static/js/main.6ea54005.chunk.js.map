{"version":3,"sources":["serviceWorker.js","utils/constants.js","database/index.js","utils/index.js","useGlobalState.js","components/Header.jsx","components/FormInput.jsx","components/FormAutocomplete.jsx","components/FormAutocompleteMulti.jsx","components/FormAttributes.jsx","components/FormAlignment.jsx","components/Form.jsx","components/Refreshing.jsx","components/CodeDialog.jsx","firebase/index.js","components/ImportDialog.jsx","components/PrintDialog.jsx","components/SaveDialog.jsx","components/App.jsx","index.js"],"names":["Boolean","window","location","hostname","match","SCREENS","FORM","Symbol","PRINT","REFRESH","DIALOGS","CODE","IMPORT","SAVE","ATTRIBUTES","str","dex","con","int","wis","cha","TYPES","ALIGNMENT","ALIGNMENT_POSITION","BACKSTORY","CHARACTER_NAME","CLASS","DATE","FAMILIAR","FAMILIAR_POWER","FIENDS","GENDER","GOLD","MARKET_ARMOR","MARKET_WEAPON","MARKET_SKILL","MARKET_SCROLL","MARKET_TRAIT","MINION","MONSTER","MONSTER_ATTACK","MONSTER_LOCATION","MONSTER_OBSTACLE","PLAYER","RACE","SCORE","XP","GLOBAL_STATE_ALIAS","FORM_LABELS","typeaheadCache","marketCahce","adventureCache","switcher","ALIGNMENTS","BACKSTORIES","CLASSES","FAMILIARS","GENDERS","filterDataByKind","MARKET","MINIONS","ADVENTURE","RACES","getTypeahead","type","undefined","data","typeheadData","Object","values","map","entry","value","id","text","name","sortedTypeaheadData","orderBy","getAdventureTypeahead","monsterName","reduce","acc","monster","push","getHashData","kind","cache","forEach","card","getMonsterAdventureData","dict","typeahead","determineCharacterCompletion","objRef","characterName","player","race","class","backstory","alignment","attributes","some","attr","monsterLocation","monsterObstacle","monsterAttack","familiar","familiarPower","getCharacterJsonApi","character","gender","getAttributeScores","getRPAAttributeScores","getAlignmentScore","alignmentPos","items","armor","sort","weapons","scrolls","skills","traits","battle","obstacle","attack","minions","power","fiends","counts","experience","xp","gold","score","health","getHealth","meta","date","Date","getCharacterTextString","result","getLine","length","separator","Array","fill","join","addSection","title","sLine","toUpperCase","addSubSection","ssLine","addText","addListItem","item","addList","list","i","titleLine","addTitle","attributesObj","raceId","rpAttributes","rpaAttributes","addDice","getCombinedAttributeScores","addLine","alignmentObj","num","addLineBreak","raceData","getAttrValue","val","alignmentId","position","aligmentData","split","Number","titles","0","1","2","3","4","5","6","7","8","fiendsCount","getTodaysDate","now","day","getDate","month","getMonth","year","getFullYear","getEntryById","filter","o","initialState","screen","characterObject","deserializedCharacter","isCharacterGenerated","isCharacterComplete","activeDialog","isSavingEnabled","characterId","createGlobalState","useGlobalState","setGlobalStateCGS","setGlobalState","setState","resetGlobalState","setTimeout","getCompleteGlobalState","getState","setCompleteGlobalState","Header","setActiveDialog","setIsSavingEnabled","useState","saveClickCount","setSaveClickCount","className","IconButton","aria-label","onClick","v","FormInput","inputType","classModifier","setEntry","FormControl","TextField","label","onChange","event","target","defaultValue","FormAutocomplete","isDisabled","entryDict","entryTypeahead","Autocomplete","options","getOptionLabel","option","getOptionSelected","renderInput","params","onInputChange","index","getAttribute","_","selectedEntry","console","log","disabled","autoHighlight","FormAutocompleteMulti","ids","multiple","includes","filterSelectedOptions","variant","newInput","FormAttributes","entries","key","Attribute","modifier","setAttributes","total","s","readOnly","min","max","FormAlignment","setAlignment","setAlignmentPos","alignmentDict","alignmentTypeahead","handleChangeAlignmentPos","alignmentGridPlaceholder","alignmentModifiers","activeModifiers","activeClass","Form","adventureData","setAdventureData","useEffect","CircularProgressWithLabel","Box","display","CircularProgress","top","left","bottom","right","alignItems","justifyContent","Typography","component","color","Math","round","Refreshing","progress","setProgress","timer","setInterval","prevProgress","REFRESH_TIMER","clearInterval","Transition","forwardRef","props","ref","Slide","direction","CodeDialog","setCharacterObject","setIsCharacterComplete","setIsCharacterGenerated","referenceObj","err","error","handleCloseDialog","saveTextFile","useCallback","a","document","createElement","file","Blob","href","URL","createObjectURL","toLowerCase","download","click","Dialog","open","TransitionComponent","keepMounted","onClose","DialogTitle","DialogContent","JSON","stringify","DialogActions","Button","fb","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","API_FUNCTIONS","functions","API","database","getCharacters","httpsCallable","ImportDialog","setScreen","isLoading","setIsLoading","selectedCharacterId","setSelectedCharacterId","characters","setCharacters","response","handleSelectCharacter","selectedClass","c","loadCharacterFromDatabase","PrintDialog","handlePrint","localStorage","setItem","DialogContentText","saveCharacter","updateCharacter","SaveDialog","setCharacterId","setDeserializedCharacter","isLoggedIn","setIsLoggedIn","pw","setPW","email","setEmail","deserializeCharacter","handleSave","Error","alert","e","activeComponent","activeDialogComponent","App","Container","maxWidth","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6ea54005.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const SCREENS = {\n  FORM: Symbol('FORM'),\n  PRINT: Symbol('PRINT'),\n  REFRESH: Symbol('REFRESH'),\n};\n\nexport const DIALOGS = {\n  CODE: Symbol('CODE'),\n  PRINT: Symbol('PRINT'),\n  IMPORT: Symbol('IMPORT'),\n  SAVE: Symbol('SAVE'),\n};\n\nexport const GENDERS = {\n  FEMALE: 'FEMALE',\n  MALE: 'MALE',\n  UNKNOWN: 'UNKNOWN',\n};\n\nexport const REFRESH_TIMER = 800;\n\nexport const ATTRIBUTES = {\n  str: 'Strength',\n  dex: 'Dexterity',\n  con: 'Constitution',\n  int: 'Intelligence',\n  wis: 'Wisdom',\n  cha: 'Charisma',\n};\n\nexport const TYPES = {\n  ALIGNMENT: Symbol('ALIGNMENT'),\n  ALIGNMENT_POSITION: Symbol('ALIGNMENT_POSITION'),\n  ATTRIBUTES: Symbol('ATTRIBUTES'),\n  BACKSTORY: Symbol('BACKSTORY'),\n  CHARACTER_NAME: Symbol('CHARACTER_NAME'),\n  CLASS: Symbol('CLASS'),\n  DATE: Symbol('DATE'),\n  FAMILIAR: Symbol('FAMILIAR'),\n  FAMILIAR_POWER: Symbol('FAMILIAR_POWER'),\n  FIENDS: Symbol('FIENDS'),\n  GENDER: Symbol('GENDER'),\n  GOLD: Symbol('GOLD'),\n  MARKET_ARMOR: Symbol('MARKET_ARMOR'),\n  MARKET_WEAPON: Symbol('MARKET_WEAPON'),\n  MARKET_SKILL: Symbol('MARKET_SKILL'),\n  MARKET_SCROLL: Symbol('MARKET_SCROLL'),\n  MARKET_TRAIT: Symbol('MARKET_TRAIT'),\n  MINION: Symbol('MINION'),\n  MONSTER: Symbol('MONSTER'),\n  MONSTER_ATTACK: Symbol('MONSTER_ATTACK'),\n  MONSTER_LOCATION: Symbol('MONSTER_LOCATION'),\n  MONSTER_OBSTACLE: Symbol('MONSTER_OBSTACLE'),\n  PLAYER: Symbol('PLAYER'),\n  RACE: Symbol('RACE'),\n  SCORE: Symbol('SCORE'),\n  XP: Symbol('XP'),\n};\n\nexport const GLOBAL_STATE_ALIAS = {\n  [TYPES.ALIGNMENT]: 'alignment',\n  [TYPES.ALIGNMENT_POSITION]: 'alignmentPos',\n  [TYPES.ATTRIBUTES]: 'attributes',\n  [TYPES.XP]: 'xp',\n  [TYPES.RACE]: 'race',\n  [TYPES.CLASS]: 'class',\n  [TYPES.CHARACTER_NAME]: 'characterName',\n  [TYPES.DATE]: 'date',\n  [TYPES.FAMILIAR]: 'familiar',\n  [TYPES.FAMILIAR_POWER]: 'familiarPower',\n  [TYPES.FIENDS]: 'fiends',\n  [TYPES.GENDER]: 'gender',\n  [TYPES.GOLD]: 'gold',\n  [TYPES.BACKSTORY]: 'backstory',\n  [TYPES.MARKET_ARMOR]: 'armor',\n  [TYPES.MARKET_WEAPON]: 'weapons',\n  [TYPES.MARKET_SKILL]: 'skills',\n  [TYPES.MARKET_SCROLL]: 'scrolls',\n  [TYPES.MARKET_TRAIT]: 'traits',\n  [TYPES.MINION]: 'minions',\n  [TYPES.MONSTER]: 'monster',\n  [TYPES.MONSTER_LOCATION]: 'monsterLocation',\n  [TYPES.MONSTER_OBSTACLE]: 'monsterObstacle',\n  [TYPES.MONSTER_ATTACK]: 'monsterAttack',\n  [TYPES.PLAYER]: 'player',\n  [TYPES.SCORE]: 'score',\n  [TYPES.XP]: 'xp',\n};\n\nexport const FORM_LABELS = {\n  [TYPES.RACE]: 'Race',\n  [TYPES.CLASS]: 'Class',\n  [TYPES.CHARACTER_NAME]: 'Character Name',\n  [TYPES.DATE]: 'Date',\n  [TYPES.FAMILIAR]: 'Familiar',\n  [TYPES.FAMILIAR_POWER]: 'Power',\n  [TYPES.FIENDS]: 'Fiends',\n  [TYPES.GENDER]: 'Gender',\n  [TYPES.GOLD]: 'Gold',\n  [TYPES.BACKSTORY]: 'Backstory',\n  [TYPES.MARKET_ARMOR]: 'Armor',\n  [TYPES.MARKET_WEAPON]: 'Weapons',\n  [TYPES.MARKET_SKILL]: 'Skills',\n  [TYPES.MARKET_SCROLL]: 'Scrolls',\n  [TYPES.MARKET_TRAIT]: 'Traits',\n  [TYPES.MINION]: 'Trophies (Minions)',\n  [TYPES.MONSTER]: 'Monster',\n  [TYPES.MONSTER_LOCATION]: 'Location',\n  [TYPES.MONSTER_OBSTACLE]: 'Obstacle',\n  [TYPES.MONSTER_ATTACK]: 'Attack',\n  [TYPES.PLAYER]: 'Player',\n  [TYPES.SCORE]: 'Score',\n  [TYPES.XP]: 'XP',\n};\n","import { orderBy } from 'lodash-es';\n\n// Data\nimport ADVENTURE from './adventure.json';\nimport ALIGNMENTS from './alignments.json';\nimport BACKSTORIES from './backstories.json';\nimport CLASSES from './classes.json';\nimport FAMILIARS from './familiars.json';\nimport FIENDS from './fiends.json';\nimport GENDERS from './genders.json';\nimport MARKET from './market.json';\nimport MINIONS from './minions.json';\nimport MONSTER from './monsters.json';\nimport RACES from './races.json';\n\n// Utils\nimport { TYPES } from '../utils/constants';\n\nconst typeaheadCache = {};\nconst marketCahce = {};\nconst adventureCache = {};\n\nconst switcher = {\n  [TYPES.ALIGNMENT]: ALIGNMENTS,\n  [TYPES.BACKSTORY]: BACKSTORIES,\n  [TYPES.CLASS]: CLASSES,\n  [TYPES.FAMILIAR]: FAMILIARS,\n  [TYPES.FIENDS]: FIENDS,\n  [TYPES.GENDER]: GENDERS,\n  [TYPES.MARKET_ARMOR]: filterDataByKind('Armor', MARKET, marketCahce),\n  [TYPES.MARKET_SCROLL]: filterDataByKind('Scroll', MARKET, marketCahce),\n  [TYPES.MARKET_SKILL]: filterDataByKind('Skill', MARKET, marketCahce),\n  [TYPES.MARKET_TRAIT]: filterDataByKind('Trait', MARKET, marketCahce),\n  [TYPES.MARKET_WEAPON]: filterDataByKind('Weapon', MARKET, marketCahce),\n  [TYPES.MINION]: MINIONS,\n  [TYPES.MONSTER]: MONSTER,\n  [TYPES.MONSTER_LOCATION]: filterDataByKind('location', ADVENTURE, adventureCache),\n  [TYPES.MONSTER_OBSTACLE]: filterDataByKind('obstacle', ADVENTURE, adventureCache),\n  [TYPES.MONSTER_ATTACK]: filterDataByKind('attack', ADVENTURE, adventureCache),\n  [TYPES.RACE]: RACES,\n};\n\nexport function getTypeahead(type) {\n  if (typeaheadCache[type] === undefined) {\n    const data = switcher[type];\n\n    const typeheadData = Object.values(data).map((entry) => ({\n      value: entry.id,\n      text: entry.name,\n    }));\n\n    const sortedTypeaheadData = orderBy(typeheadData, 'text');\n\n    typeaheadCache[type] = sortedTypeaheadData;\n  }\n\n  return typeaheadCache[type];\n}\n\nexport function getAdventureTypeahead(data, monsterName) {\n  return Object.values(data).reduce((acc, entry) => {\n    if (entry.monster === monsterName) {\n      acc.push({\n        value: entry.id,\n        text: entry.name,\n      });\n    }\n    return acc;\n  }, []);\n}\n\nexport function getHashData(type) {\n  return switcher[type];\n}\n\nfunction filterDataByKind(kind, data, cache) {\n  if (cache[kind] === undefined) {\n    Object.values(data).forEach((card) => {\n      if (cache[card.kind] === undefined) {\n        cache[card.kind] = {};\n      }\n\n      cache[card.kind][card.id] = card;\n    });\n  }\n\n  return cache[kind];\n}\n","import { getHashData, getAdventureTypeahead } from '../database';\nimport { TYPES } from './constants';\n\nexport function getMonsterAdventureData(type, monsterName) {\n  const dict = getHashData(type);\n  return {\n    dict,\n    typeahead: getAdventureTypeahead(dict, monsterName),\n  };\n}\n\nexport function determineCharacterCompletion(objRef) {\n  // If text fields are empty\n  if (!objRef.characterName || !objRef.player) return false;\n\n  // If mandatory fields are empty\n  if (!objRef.race || !objRef.class || !objRef.backstory || !objRef.alignment) return false;\n\n  // If attributes are less than 3\n  if (Object.values(objRef.attributes).some((attr) => attr < 3)) return false;\n\n  // If monster, but no location, obstacle, or attack\n  if (\n    objRef.monster &&\n    (!objRef.monsterLocation || !objRef.monsterObstacle || !objRef.monsterAttack)\n  )\n    return false;\n\n  // If has familiar, but power is less then 3\n  if (objRef.familiar && !objRef.familiarPower) return false;\n\n  return true;\n}\n\nexport function deserializeCharacter(objRef) {\n  const result = {\n    id: objRef.characterId,\n    name: objRef.characterName,\n    race: objRef.race,\n    class: objRef.class,\n    gender: objRef.gender,\n    backstory: objRef.backstory,\n    'attribute-scores': objRef.attributes,\n    alignment: {\n      id: objRef.alignment,\n      position: Number(objRef.alignmentPos),\n    },\n    items: {\n      armor: objRef.armor?.sort(),\n      weapons: objRef.weapons?.sort(),\n      scrolls: objRef.scrolls?.sort(),\n    },\n    skills: objRef.skills?.sort(),\n    traits: objRef.traits?.sort(),\n    battle: {\n      monster: objRef.monster,\n      location: objRef.monsterLocation,\n      obstacle: objRef.monsterObstacle,\n      attack: objRef.monsterAttack,\n      minions: objRef.minions?.sort(),\n    },\n    fiends: objRef.fiends?.sort(),\n    counts: {\n      experience: Number(objRef.xp),\n      gold: Number(objRef.gold),\n      score: Number(objRef.score),\n    },\n    player: objRef.player,\n    'created-at': objRef.date ?? getTodaysDate(),\n  };\n\n  if (objRef.familiar) {\n    result.familiar = {\n      id: objRef.familiar,\n      power: Number(objRef.familiarPower),\n    };\n  }\n\n  return result;\n}\n\nexport function getCharacterJsonApi(objRef) {\n  return {\n    id: objRef.character ?? null,\n    type: 'roll-player-character',\n    attributes: {\n      name: objRef.characterName,\n      race: getHashData(TYPES.RACE)[objRef.race]?.name ?? '',\n      class: getHashData(TYPES.CLASS)[objRef.class]?.name ?? '',\n      gender: getHashData(TYPES.GENDER)[objRef.gender]?.name ?? 'Unkown',\n      backstory: getHashData(TYPES.BACKSTORY)[objRef.backstory]?.name ?? '',\n      'attribute-rp-scores': getAttributeScores(objRef.attributes, objRef.race),\n      'attribute-rpa-scores': getRPAAttributeScores(objRef.attributes, objRef.race),\n      alignment: getAlignmentScore(objRef.alignment, objRef.alignmentPos),\n      items: {\n        armor: objRef.armor.map((id) => getHashData(TYPES.MARKET_ARMOR)[id]?.name ?? '').sort(),\n        weapons: objRef.weapons\n          .map((id) => getHashData(TYPES.MARKET_WEAPON)[id]?.name ?? '')\n          .sort(),\n        scrolls: objRef.scrolls\n          .map((id) => getHashData(TYPES.MARKET_SCROLL)[id]?.name ?? '')\n          .sort(),\n      },\n      skills: objRef.skills.map((id) => getHashData(TYPES.MARKET_SKILL)[id]?.name ?? '').sort(),\n      traits: objRef.traits.map((id) => getHashData(TYPES.MARKET_TRAIT)[id]?.name ?? '').sort(),\n      battle: {\n        monster: getHashData(TYPES.MONSTER)[objRef.monster]?.name ?? '',\n        location: getHashData(TYPES.MONSTER_LOCATION)[objRef.monsterLocation]?.name ?? '',\n        obstacle: getHashData(TYPES.MONSTER_OBSTACLE)[objRef.monsterObstacle]?.name ?? '',\n        attack: getHashData(TYPES.MONSTER_ATTACK)[objRef.monsterAttack]?.name ?? '',\n        minions: objRef.minions.map((id) => getHashData(TYPES.MINION)[id]?.name ?? '').sort(),\n      },\n      familiar: {\n        name: getHashData(TYPES.FAMILIAR)[objRef.familiar]?.name ?? '',\n        power: objRef.familiarPower,\n      },\n      fiends: objRef.fiends.map((id) => getHashData(TYPES.FIENDS)[id]?.name ?? '').sort(),\n      counts: {\n        experience: objRef.xp,\n        gold: objRef.gold,\n        score: objRef.score,\n        health: getHealth(objRef.score, objRef.fiends),\n      },\n    },\n    meta: {\n      'created-by': objRef.player,\n      'created-at': objRef.date ?? new Date(),\n    },\n  };\n}\n\nexport function getCharacterTextString(objRef) {\n  let result = '';\n\n  function getLine(length, separator = '-') {\n    return `${new Array(length).fill(separator).join('')}`;\n  }\n\n  function addLine(length = 15) {\n    result += getLine(length);\n  }\n\n  function addTitle(title) {\n    const titleLine = getLine(title.length, '=');\n    result += `\\n${titleLine}\\n${title.toUpperCase()}\\n${titleLine}\\n\\n`;\n  }\n\n  function addSection(title) {\n    const sLine = getLine(title.length, '-');\n    result += `\\n${sLine.toUpperCase()}\\n${title.toUpperCase()}\\n${sLine}\\n\\n`;\n  }\n\n  function addSubSection(title) {\n    const ssLine = getLine(title.length, '-');\n    result += `\\n${title.toUpperCase()}\\n${ssLine}\\n\\n`;\n  }\n\n  function addText(text) {\n    result += `${text}\\n`;\n  }\n\n  function addListItem(item) {\n    result += `    - ${item}\\n`;\n  }\n\n  function addList(list = []) {\n    if (list.length === 0) {\n      result += 'N/A\\n';\n    } else {\n      for (let i = 0; i < list.length; i++) {\n        addListItem(list[i]);\n      }\n    }\n  }\n\n  function addLineBreak(num = 1) {\n    for (let i = 0; i < num; i++) {\n      result += '\\n';\n    }\n  }\n\n  // BUILD\n  addTitle('Roll Player Hero Tome');\n  addText(`Created by ${objRef.player} on ${objRef.date}`);\n  addSection(`Character: ${objRef.characterName}`);\n  addText(`Race: ${getHashData(TYPES.RACE)[objRef.race]?.name}`);\n  addText(`Class: ${getHashData(TYPES.CLASS)[objRef.class]?.name}`);\n  addText(`Gender: ${getHashData(TYPES.GENDER)[objRef.gender]?.name}`);\n  addText(`Backstory: ${getHashData(TYPES.BACKSTORY)[objRef.backstory]?.name}`);\n  addSubSection('Attributes');\n  const attributesObj = getCombinedAttributeScores(objRef.attributes, objRef.race);\n  addText(`STR = ${attributesObj.str[1]} (${attributesObj.str[0]})`);\n  addText(`DEX = ${attributesObj.dex[1]} (${attributesObj.dex[0]})`);\n  addText(`CON = ${attributesObj.con[1]} (${attributesObj.con[0]})`);\n  addText(`INT = ${attributesObj.int[1]} (${attributesObj.int[0]})`);\n  addText(`WIS = ${attributesObj.wis[1]} (${attributesObj.wis[0]})`);\n  addText(`CHA = ${attributesObj.cha[1]} (${attributesObj.cha[0]})`);\n  if (attributesObj.addDice) {\n    addLine(\n      `\\n// Add ${attributesObj.addDice} to any attribute score before playing Roll Player Adventures`\n    );\n  }\n  addSubSection('Alignment');\n  const alignmentObj = getAlignmentScore(objRef.alignment, objRef.alignmentPos);\n  addText(`${alignmentObj.name} (${alignmentObj.title})`);\n  addText(`Points: ${alignmentObj.score}`);\n  addSection('Stats');\n  addListItem(`Health: ${getHealth(objRef.score, objRef.fiends)}`);\n  addListItem(`Experience: ${objRef.xp}`);\n  addListItem(`Gold: ${objRef.gold}`);\n  addSection('Items/Abilities');\n  addSubSection('Armor');\n  addList(objRef.armor.map((id) => getHashData(TYPES.MARKET_ARMOR)[id]?.name ?? '').sort());\n  addSubSection('Weapons');\n  addList(objRef.weapons.map((id) => getHashData(TYPES.MARKET_WEAPON)[id]?.name ?? '').sort());\n  addSubSection('Scrolls');\n  addList(objRef.scrolls.map((id) => getHashData(TYPES.MARKET_SCROLL)[id]?.name ?? '').sort());\n  addSubSection('Skills');\n  addList(objRef.skills.map((id) => getHashData(TYPES.MARKET_SKILL)[id]?.name ?? '').sort());\n  addSubSection('Traits');\n  addList(objRef.traits.map((id) => getHashData(TYPES.MARKET_TRAIT)[id]?.name ?? '').sort());\n  addSection('Familiar');\n  addText(\n    `${getHashData(TYPES.FAMILIAR)[objRef.familiar]?.name ?? ''} (Power: ${objRef.familiarPower})`\n  );\n  addSection('Enemies');\n  addSubSection(`Monter: ${getHashData(TYPES.MONSTER)[objRef.monster]?.name ?? ''}`);\n  addListItem(\n    `Location: ${getHashData(TYPES.MONSTER_LOCATION)[objRef.monsterLocation]?.name ?? ''}`\n  );\n  addListItem(\n    `Obstacle: ${getHashData(TYPES.MONSTER_OBSTACLE)[objRef.monsterObstacle]?.name ?? ''}`\n  );\n  addListItem(`Attack: ${getHashData(TYPES.MONSTER_ATTACK)[objRef.monsterAttack]?.name ?? ''}`);\n  addSubSection('Minions');\n  addList(objRef.minions.map((id) => getHashData(TYPES.MINION)[id]?.name ?? '').sort());\n  addSubSection('Fiends');\n  addList(objRef.fiends.map((id) => getHashData(TYPES.FIENDS)[id]?.name ?? '').sort());\n  addLineBreak(2);\n  addSection('Final Score');\n  addText(`${objRef.score} reputation stars`);\n  return result;\n}\n\nfunction getAttributeScores(attributes, raceId) {\n  const raceData = getHashData(TYPES.RACE)?.[raceId];\n\n  return {\n    str: (attributes.str ?? 0) + (raceData?.str ?? 0),\n    dex: (attributes.dex ?? 0) + (raceData?.dex ?? 0),\n    con: (attributes.con ?? 0) + (raceData?.con ?? 0),\n    int: (attributes.int ?? 0) + (raceData?.int ?? 0),\n    wis: (attributes.wis ?? 0) + (raceData?.wis ?? 0),\n    cha: (attributes.cha ?? 0) + (raceData?.cha ?? 0),\n  };\n}\n\nfunction getRPAAttributeScores(attributes, raceId) {\n  const rpAttributes = getAttributeScores(attributes, raceId);\n\n  function getAttrValue(val) {\n    if (val < 14) return 0;\n    if (val < 16) return 1;\n    if (val < 18) return 2;\n    return 3;\n  }\n\n  return {\n    str: getAttrValue(rpAttributes.str),\n    dex: getAttrValue(rpAttributes.dex),\n    con: getAttrValue(rpAttributes.con),\n    int: getAttrValue(rpAttributes.int),\n    wis: getAttrValue(rpAttributes.wis),\n    cha: getAttrValue(rpAttributes.cha),\n  };\n}\n\nfunction getCombinedAttributeScores(attributes, raceId) {\n  const rpAttributes = getAttributeScores(attributes, raceId);\n  const rpaAttributes = getRPAAttributeScores(attributes, raceId);\n\n  const addDice = Object.values(rpaAttributes).reduce((acc, entry) => {\n    acc -= entry;\n    if (acc < 0) acc = 0;\n    return acc;\n  }, 6);\n\n  return {\n    str: [rpAttributes.str, rpaAttributes.str],\n    dex: [rpAttributes.dex, rpaAttributes.dex],\n    con: [rpAttributes.con, rpaAttributes.con],\n    int: [rpAttributes.int, rpaAttributes.int],\n    wis: [rpAttributes.wis, rpaAttributes.wis],\n    cha: [rpAttributes.cha, rpaAttributes.cha],\n    addDice,\n  };\n}\n\nfunction getAlignmentScore(alignmentId, position = 4) {\n  const aligmentData = getHashData(TYPES.ALIGNMENT)?.[alignmentId];\n\n  const values = aligmentData?.values?.split(',').map(Number) ?? [];\n\n  const titles = {\n    0: 'Lawful-Good',\n    1: 'Neutral-Good',\n    2: 'Chaotic-Good',\n    3: 'Lawful-Neutral',\n    4: 'Neutraul-Neutral',\n    5: 'Chaotic-Neutral',\n    6: 'Lawful-Evil',\n    7: 'Neutral-Evil',\n    8: 'Chaotic-Evil',\n  };\n\n  return {\n    name: aligmentData?.name ?? '',\n    title: titles[position],\n    score: values[position],\n  };\n}\n\nfunction getHealth(score, fiends) {\n  const fiendsCount = fiends.length;\n\n  if (score < 21) return 14 - fiendsCount;\n  if (score < 26) return 15 - fiendsCount;\n  if (score < 36) return 16 - fiendsCount;\n  if (score < 41) return 17 - fiendsCount;\n  return 18 - fiendsCount;\n}\n\nexport function loadCharacterFromDatabase(characters, id, initialState) {\n  // Find character\n  const character = characters.filter((c) => c.id === id)[0];\n\n  const state = {\n    ...initialState,\n    alignment: character.alignment.id,\n    alignmentPos: character.alignment.position,\n    armor: character?.items.armor ?? [],\n    attributes: {\n      str: character['attribute-scores'].str ?? 0,\n      dex: character['attribute-scores'].dex ?? 0,\n      con: character['attribute-scores'].con ?? 0,\n      int: character['attribute-scores'].int ?? 0,\n      wis: character['attribute-scores'].wis ?? 0,\n      cha: character['attribute-scores'].cha ?? 0,\n    },\n    backstory: character.backstory,\n    characterId: character.id,\n    characterName: character.name,\n    class: character.class,\n    date: character['created-at'],\n    familiar: character.familiar.id,\n    familiarPower: Number(character.familiar.power ?? 0),\n    fiends: character?.fiends ?? [],\n    gender: character.gender,\n    gold: Number(character.counts.gold),\n    minions: character?.battle?.minions ?? [],\n    monster: character?.battle?.monster ?? null,\n    monsterAttack: character?.battle?.attack ?? null,\n    monsterLocation: character?.battle?.location ?? null,\n    monsterObstacle: character?.battle?.obstacle ?? null,\n    player: character?.player,\n    race: character.race,\n    score: Number(character.counts.score),\n    scrolls: character?.items.scrolls ?? [],\n    skills: character?.skills ?? [],\n    traits: character?.traits ?? [],\n    weapons: character?.items.weapons ?? [],\n    xp: 0,\n  };\n\n  return state;\n}\n\nexport function getTodaysDate() {\n  const now = new Date();\n  let day = now.getDate();\n  let month = now.getMonth() + 1;\n  const year = now.getFullYear();\n\n  if (month < 10) month = `0${month}`;\n  if (day < 10) day = `0${day}`;\n\n  return `${year}-${month}-${day}`;\n}\n\nexport function getEntryById(list, id) {\n  return list.filter((o) => o.value === id)[0];\n}\n\nexport function getEntriesByIds(list, ids) {\n  return list.filter((o) => ids.includes(o.value));\n}\n","import { createGlobalState } from 'react-hooks-global-state';\n\nimport { SCREENS, REFRESH_TIMER } from './utils/constants';\nimport { getTodaysDate } from './utils';\n\nexport const initialState = {\n  screen: SCREENS.FORM,\n  characterName: '',\n  player: '',\n  race: null,\n  class: null,\n  gender: null,\n  backstory: null,\n  attributes: {\n    str: 0,\n    dex: 0,\n    con: 0,\n    int: 0,\n    wis: 0,\n    cha: 0,\n  },\n  alignment: null,\n  alignmentPos: 4,\n  weapons: [],\n  armor: [],\n  skills: [],\n  traits: [],\n  scrolls: [],\n  minions: [],\n  xp: 0,\n  gold: 0,\n  score: 0,\n  date: getTodaysDate(),\n  familiar: null,\n  familiarPower: 0,\n  fiends: [],\n  monster: null,\n  monsterLocation: null,\n  monsterObstacle: null,\n  monsterAttack: null,\n  characterObject: null,\n  deserializedCharacter: null,\n  isCharacterGenerated: false,\n  isCharacterComplete: false,\n  activeDialog: null,\n  isSavingEnabled: false,\n  characterId: null,\n};\n\nconst { useGlobalState, setGlobalState: setGlobalStateCGS, setState, getState } = createGlobalState(\n  initialState\n);\n\nexport function resetGlobalState() {\n  setGlobalState('screen', SCREENS.REFRESH);\n  setTimeout(() => {\n    setState({ ...initialState });\n  }, REFRESH_TIMER);\n}\n\nexport const getCompleteGlobalState = getState;\n\nexport const setGlobalState = setGlobalStateCGS;\n\nexport const setCompleteGlobalState = setState;\n\nexport default useGlobalState;\n","import React, { Fragment, useState } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PrintIcon from '@material-ui/icons/Print';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CodeIcon from '@material-ui/icons/Code';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\n\nimport useGlobalState, { resetGlobalState } from '../useGlobalState';\nimport { DIALOGS } from '../utils/constants';\n\nexport default function Header() {\n  const [, setActiveDialog] = useGlobalState('activeDialog');\n  const [isSavingEnabled, setIsSavingEnabled] = useGlobalState('isSavingEnabled');\n  // Local state\n  const [saveClickCount, setSaveClickCount] = useState(0);\n\n  const handleEditClick = () => {\n    if (!isSavingEnabled) {\n      setSaveClickCount((v) => ++v);\n      if (saveClickCount > 1) {\n        setIsSavingEnabled(true);\n      }\n    }\n  };\n\n  const handleOpenPrintDialog = () => {\n    setActiveDialog(DIALOGS.PRINT);\n  };\n\n  const handleOpenCodeDialog = () => {\n    setActiveDialog(DIALOGS.CODE);\n  };\n\n  const handleOpenImportDialog = () => {\n    setActiveDialog(DIALOGS.IMPORT);\n  };\n\n  const handleOpenSaveDialog = () => {\n    setActiveDialog(DIALOGS.SAVE);\n  };\n\n  return (\n    <header className=\"header\">\n      <IconButton className=\"header-button\" aria-label=\"reset\" onClick={resetGlobalState}>\n        <RotateLeftIcon />\n      </IconButton>\n      <h1 onClick={handleEditClick}>Roll Player: Hero Tome</h1>\n      {isSavingEnabled && (\n        <Fragment>\n          <IconButton\n            className=\"header-button\"\n            aria-label=\"import\"\n            onClick={handleOpenImportDialog}\n          >\n            <ListAltIcon />\n          </IconButton>\n          <IconButton className=\"header-button\" aria-label=\"save\" onClick={handleOpenSaveDialog}>\n            <SaveIcon />\n          </IconButton>\n        </Fragment>\n      )}\n      <IconButton className=\"header-button\" aria-label=\"print\" onClick={handleOpenPrintDialog}>\n        <PrintIcon />\n      </IconButton>\n      <IconButton className=\"header-button\" aria-label=\"code\" onClick={handleOpenCodeDialog}>\n        <CodeIcon />\n      </IconButton>\n    </header>\n  );\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport { GLOBAL_STATE_ALIAS, FORM_LABELS } from '../utils/constants';\n\nimport useGlobalState from '../useGlobalState';\n\nexport default function FormInput({ type, inputType = 'text', classModifier = '' }) {\n  // Global States\n  const [entry, setEntry] = useGlobalState(GLOBAL_STATE_ALIAS[type]);\n\n  const handleChange = (event) => {\n    setEntry(event.target.value);\n  };\n\n  return (\n    <FormControl className={`form-item form-item--text form-item--${classModifier}`}>\n      <TextField\n        id={GLOBAL_STATE_ALIAS[type]}\n        label={FORM_LABELS[type]}\n        onChange={handleChange}\n        defaultValue={entry}\n        type={inputType}\n      />\n    </FormControl>\n  );\n}\n","import React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { getTypeahead, getHashData } from '../database';\nimport { getEntryById } from '../utils';\nimport { GLOBAL_STATE_ALIAS, FORM_LABELS } from '../utils/constants';\n\nimport useGlobalState from '../useGlobalState';\n\nexport default function FormAutocomplete({\n  type,\n  classModifier = '',\n  data = null,\n  isDisabled = false,\n}) {\n  // Global States\n  const [entry, setEntry] = useGlobalState(GLOBAL_STATE_ALIAS[type]);\n\n  let entryDict = {};\n  let entryTypeahead = [];\n\n  if (data) {\n    entryDict = data.dict;\n    entryTypeahead = data.typeahead;\n  } else {\n    entryDict = getHashData(type);\n    entryTypeahead = getTypeahead(type);\n  }\n\n  const handleInputChange = (event) => {\n    const index = event?.target.getAttribute('data-option-index');\n    if (entryTypeahead[index]) {\n      const id = entryTypeahead[index].value;\n      setEntry(id);\n    }\n  };\n\n  const handleChange = (_, selectedEntry) => {\n    console.log('HANDLING HCANGE?');\n    if (entryDict[selectedEntry?.value]) {\n      setEntry(selectedEntry.value);\n    } else {\n      setEntry(null);\n    }\n  };\n\n  const label = FORM_LABELS[type];\n\n  return (\n    <FormControl className={`form-item form-item--autocomplete form-item--${classModifier}`}>\n      <Autocomplete\n        id={label}\n        options={entryTypeahead}\n        defaultValue={getEntryById(entryTypeahead, entry)}\n        getOptionLabel={(option) => option.text}\n        getOptionSelected={(option) => option.value === entryDict?.[entry]?.id}\n        renderInput={(params) => <TextField {...params} label={label} />}\n        onInputChange={handleInputChange}\n        onChange={handleChange}\n        disabled={isDisabled}\n        autoHighlight\n      />\n    </FormControl>\n  );\n}\n","import React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { getTypeahead } from '../database';\nimport { getEntriesByIds } from '../utils';\nimport { GLOBAL_STATE_ALIAS, FORM_LABELS } from '../utils/constants';\n\nimport useGlobalState from '../useGlobalState';\n\nexport default function FormAutocompleteMulti({ type, classModifier = '' }) {\n  // Global States\n  const [entry, setEntry] = useGlobalState(GLOBAL_STATE_ALIAS[type]);\n\n  const entryTypeahead = getTypeahead(type);\n\n  const handleChange = (_, newInput) => {\n    const ids = newInput.map((o) => o.value);\n    console.log(ids);\n    setEntry(ids);\n  };\n\n  const label = FORM_LABELS[type];\n\n  return (\n    <FormControl className={`form-item form-item--autocomplete form-item--${classModifier}`}>\n      <Autocomplete\n        multiple\n        id={label}\n        options={entryTypeahead}\n        defaultValue={getEntriesByIds(entryTypeahead, entry)}\n        getOptionLabel={(option) => option.text}\n        filterSelectedOptions\n        renderInput={(params) => <TextField {...params} label={label} variant=\"outlined\" />}\n        onChange={handleChange}\n        autoHighlight\n      />\n    </FormControl>\n  );\n}\n","import React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport { getHashData } from '../database';\nimport { ATTRIBUTES, TYPES } from '../utils/constants';\n\nimport useGlobalState from '../useGlobalState';\n\nexport default function FormAttributes() {\n  // Global States\n  const [attributes] = useGlobalState('attributes');\n  const [race] = useGlobalState('race');\n\n  const raceData = getHashData(TYPES.RACE)?.[race];\n\n  return (\n    <FormControl className={`form-item form-item--attributes form-item--half`}>\n      <div className=\"attributes-grid attribute-header\">\n        <span className=\"attribute-header-label\">Attributes</span>\n        <span className=\"attribute-header--label\">Attribute Score</span>\n        <span className=\"attribute-sign invisible\">-</span>\n        <span className=\"attribute-header--label\">Racial Modifier</span>\n        <span className=\"attribute-sign invisible\">-</span>\n        <span className=\"attribute-header--label\">Total</span>\n      </div>\n      {Object.entries(ATTRIBUTES).map(([key, name]) => {\n        return (\n          <Attribute\n            key={key}\n            type={key}\n            name={name}\n            modifier={raceData?.[key]}\n            value={attributes[key]}\n            isDisabled={!Boolean(race)}\n          />\n        );\n      })}\n    </FormControl>\n  );\n}\n\nfunction Attribute({ type, name, modifier, value, isDisabled }) {\n  // Global States\n  const [, setAttributes] = useGlobalState('attributes');\n\n  const handleChange = (event) => {\n    setAttributes((s) => ({ ...s, [type]: +event.target.value }));\n  };\n\n  const total = (value ?? 0) + (modifier ?? 0);\n\n  return (\n    <div className=\"attributes-grid attribute\">\n      <label className=\"attribute-label\">\n        <span className=\"attribute-label__key\">{type}</span>\n        <span className=\"attribute-label__name\">{name}</span>\n      </label>\n      <input\n        type=\"number\"\n        className=\"attribute-score\"\n        disabled={isDisabled}\n        defaultValue={value}\n        onChange={handleChange}\n      />\n      <span className=\"attribute-sign\">+</span>\n      <input type=\"number\" className=\"attribute-race-modifier\" value={modifier ?? 0} readOnly />\n      <span className=\"attribute-sign\">=</span>\n      <input\n        type=\"number\"\n        className=\"attribute-race-total\"\n        value={total}\n        min=\"0\"\n        max=\"30\"\n        readOnly\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { getTypeahead, getHashData } from '../database';\nimport { getEntryById } from '../utils';\nimport { TYPES } from '../utils/constants';\n\nimport useGlobalState from '../useGlobalState';\n\nexport default function FormAlignment() {\n  // Global States\n  const [alignment, setAlignment] = useGlobalState('alignment');\n  const [alignmentPos, setAlignmentPos] = useGlobalState('alignmentPos');\n\n  const alignmentDict = getHashData(TYPES.ALIGNMENT);\n  const alignmentTypeahead = getTypeahead(TYPES.ALIGNMENT);\n\n  const handleInputChange = (event) => {\n    const index = event?.target.getAttribute('data-option-index');\n    if (alignmentTypeahead[index]) {\n      const id = alignmentTypeahead[index].value;\n      setAlignment(id);\n    }\n  };\n\n  const handleChange = (_, selectedEntry) => {\n    if (alignmentDict[selectedEntry?.value]) {\n      setAlignment(selectedEntry.value);\n    } else {\n      setAlignment(null);\n    }\n  };\n\n  const handleChangeAlignmentPos = (event) => {\n    setAlignmentPos(+event.target.id);\n  };\n\n  const alignmentGridPlaceholder = new Array(9).fill(0);\n\n  const alignmentModifiers = alignmentDict?.[alignment]?.values?.split(',').map(Number);\n\n  const activeModifiers = alignmentModifiers ?? alignmentGridPlaceholder;\n\n  return (\n    <FormControl className={`form-item form-item--alignment form-item--half`}>\n      <Autocomplete\n        id=\"alignment\"\n        options={alignmentTypeahead}\n        defaultValue={getEntryById(alignmentTypeahead, alignment)}\n        getOptionLabel={(option) => option.text}\n        getOptionSelected={(option) => option.value === alignmentDict?.[alignment]?.id}\n        renderInput={(params) => <TextField {...params} label=\"Alignment\" />}\n        onInputChange={handleInputChange}\n        onChange={handleChange}\n        autoHighlight\n      />\n      <div className=\"alignment-grid\">\n        <div className=\"alignment-grid__lawful\">Lawful</div>\n        <div className=\"alignment-grid__good\">Good</div>\n        <div className=\"alignment-grid__chaotic\">Chaotic</div>\n        <div className=\"alignment-grid__evil\">Evil</div>\n        <div className=\"alignment-grid__boxes\">\n          {activeModifiers.map((val, index) => {\n            const activeClass = alignmentPos === index ? 'alignment-box--active' : '';\n            return (\n              <button\n                className={`alignment-box ${activeClass}`}\n                id={`${index}`}\n                key={`al-key-${index}`}\n                onClick={handleChangeAlignmentPos}\n                disabled={!Boolean(alignment)}\n              >\n                {val}\n              </button>\n            );\n          })}\n        </div>\n      </div>\n    </FormControl>\n  );\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { getHashData } from '../database';\nimport { getMonsterAdventureData } from '../utils';\nimport { TYPES, GLOBAL_STATE_ALIAS } from '../utils/constants';\nimport useGlobalState from '../useGlobalState';\n\n// Components\nimport FormInput from './FormInput';\nimport FormAutocomplete from './FormAutocomplete';\nimport FormAutocompleteMulti from './FormAutocompleteMulti';\nimport FormAttributes from './FormAttributes';\nimport FormAlignment from './FormAlignment';\n\nexport default function Form() {\n  const [monster] = useGlobalState(GLOBAL_STATE_ALIAS[TYPES.MONSTER]);\n  // LocalState\n  const [adventureData, setAdventureData] = useState(null);\n\n  useEffect(() => {\n    if (monster) {\n      const monsterName = getHashData(TYPES.MONSTER)[monster].name;\n\n      setAdventureData({\n        location: getMonsterAdventureData(TYPES.MONSTER_LOCATION, monsterName),\n        obstacle: getMonsterAdventureData(TYPES.MONSTER_OBSTACLE, monsterName),\n        attack: getMonsterAdventureData(TYPES.MONSTER_ATTACK, monsterName),\n      });\n    }\n  }, [monster]);\n\n  return (\n    <main className=\"form\">\n      <FormInput type={TYPES.CHARACTER_NAME} classModifier=\"half\" />\n      <FormInput type={TYPES.PLAYER} classModifier=\"half\" />\n      <FormAutocomplete type={TYPES.RACE} classModifier=\"quarter\" />\n      <FormAutocomplete type={TYPES.CLASS} classModifier=\"quarter\" />\n      <FormAutocomplete type={TYPES.GENDER} classModifier=\"quarter\" />\n      <FormAutocomplete type={TYPES.BACKSTORY} classModifier=\"quarter\" />\n      <FormAttributes />\n      <FormAlignment />\n      <FormAutocompleteMulti type={TYPES.MARKET_ARMOR} classModifier=\"half\" />\n      <FormAutocompleteMulti type={TYPES.MARKET_WEAPON} classModifier=\"half\" />\n      <FormAutocompleteMulti type={TYPES.MARKET_SKILL} classModifier=\"half\" />\n      <FormAutocompleteMulti type={TYPES.MARKET_TRAIT} classModifier=\"half\" />\n      <FormAutocompleteMulti type={TYPES.MARKET_SCROLL} classModifier=\"half\" />\n      <FormAutocompleteMulti type={TYPES.MINION} classModifier=\"half\" />\n      <hr />\n      <FormAutocomplete type={TYPES.MONSTER} classModifier=\"quarter\" />\n      <FormAutocomplete\n        type={TYPES.MONSTER_LOCATION}\n        classModifier=\"quarter\"\n        isDisabled={!monster}\n        data={adventureData?.location}\n      />\n      <FormAutocomplete\n        type={TYPES.MONSTER_OBSTACLE}\n        classModifier=\"quarter\"\n        isDisabled={!monster}\n        data={adventureData?.obstacle}\n      />\n      <FormAutocomplete\n        type={TYPES.MONSTER_ATTACK}\n        classModifier=\"quarter\"\n        isDisabled={!monster}\n        data={adventureData?.attack}\n      />\n      <hr />\n      <FormAutocomplete type={TYPES.FAMILIAR} classModifier=\"quarter\" />\n      <FormInput type={TYPES.FAMILIAR_POWER} inputType=\"number\" classModifier=\"quarter\" />\n      <FormAutocompleteMulti type={TYPES.FIENDS} classModifier=\"half\" />\n      <hr />\n      <FormInput type={TYPES.XP} inputType=\"number\" classModifier=\"quarter\" />\n      <FormInput type={TYPES.GOLD} inputType=\"number\" classModifier=\"quarter\" />\n      <FormInput type={TYPES.SCORE} inputType=\"number\" classModifier=\"quarter\" />\n      <FormInput type={TYPES.DATE} inputType=\"date\" classModifier=\"quarter\" />\n    </main>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nimport { REFRESH_TIMER } from '../utils/constants';\n\nfunction CircularProgressWithLabel({ value }) {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress variant=\"static\" value={value} />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\n          value\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nexport default function Refreshing() {\n  const [progress, setProgress] = useState(1);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress((prevProgress) => (prevProgress >= 100 ? 100 : prevProgress + 10));\n    }, REFRESH_TIMER / 10);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <main className=\"form form--refreshing\">\n      <CircularProgressWithLabel value={progress} />\n    </main>\n  );\n}\n","import React, { useCallback, useEffect, forwardRef } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\n\nimport useGlobalState, { getCompleteGlobalState } from '../useGlobalState';\nimport { DIALOGS } from '../utils/constants';\nimport {\n  determineCharacterCompletion,\n  getCharacterJsonApi,\n  getCharacterTextString,\n} from '../utils';\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function CodeDialog() {\n  const [activeDialog, setActiveDialog] = useGlobalState('activeDialog');\n  const [characterObject, setCharacterObject] = useGlobalState('characterObject');\n  const [isCharacterComplete, setIsCharacterComplete] = useGlobalState('isCharacterComplete');\n  const [, setIsCharacterGenerated] = useGlobalState('isCharacterGenerated');\n\n  useEffect(() => {\n    try {\n      const referenceObj = getCompleteGlobalState();\n      setIsCharacterComplete(determineCharacterCompletion(referenceObj));\n      setCharacterObject(getCharacterJsonApi(referenceObj));\n      setIsCharacterGenerated(true);\n    } catch (err) {\n      console.error(err);\n      setIsCharacterGenerated(false);\n    }\n  }, []);\n\n  const handleCloseDialog = () => {\n    setActiveDialog(null);\n  };\n\n  const saveTextFile = useCallback(() => {\n    const referenceObj = getCompleteGlobalState();\n    const a = document.createElement('a');\n    const file = new Blob([getCharacterTextString(referenceObj)], { type: 'text/plain' });\n    a.href = URL.createObjectURL(file);\n    const characterName = referenceObj.characterName?.toLowerCase() ?? 'untitled';\n    a.download = `${characterName}-hero-totem.txt`;\n    a.click();\n  }, []);\n\n  return (\n    <Dialog\n      open={activeDialog === DIALOGS.CODE}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleCloseDialog}\n    >\n      <DialogTitle>Character Sheet JSON</DialogTitle>\n      <DialogContent>\n        <pre>{JSON.stringify(characterObject, null, 4)}</pre>\n      </DialogContent>\n      <DialogActions>\n        {!isCharacterComplete && (\n          <span className=\"dialog-alert\">This character sheet is incomplete</span>\n        )}\n        <Button onClick={saveTextFile} color=\"primary\" disabled={!isCharacterComplete}>\n          <CloudDownloadIcon /> Download\n        </Button>\n        <Button onClick={handleCloseDialog} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/functions';\n\nconst config = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\n\nconst fb = firebase.initializeApp(config);\n\nexport const API_FUNCTIONS = fb.functions();\n\nexport default fb.database();\n","import React, { forwardRef, useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\nimport Slide from '@material-ui/core/Slide';\n\nimport { getHashData } from '../database';\nimport { API_FUNCTIONS } from '../firebase';\nimport useGlobalState, { setCompleteGlobalState, initialState } from '../useGlobalState';\nimport { loadCharacterFromDatabase } from '../utils';\nimport { DIALOGS, TYPES, SCREENS, REFRESH_TIMER } from '../utils/constants';\n\nconst API = {\n  getCharacters: API_FUNCTIONS.httpsCallable('getRollPlayerCharacters'),\n};\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function ImportDialog() {\n  // Global States\n  const [activeDialog, setActiveDialog] = useGlobalState('activeDialog');\n  const [, setScreen] = useGlobalState('screen');\n  // Local states\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedCharacterId, setSelectedCharacterId] = useState(null);\n  const [characters, setCharacters] = useState([]);\n\n  useEffect(() => {\n    try {\n      setIsLoading(true);\n      async function getCharacters() {\n        const response = await API.getCharacters();\n        setCharacters(response.data);\n      }\n      getCharacters();\n    } catch (err) {\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const handleCloseDialog = () => {\n    setActiveDialog(null);\n  };\n\n  const handleLoadCharacter = () => {\n    setActiveDialog(null);\n    setScreen(SCREENS.REFRESH);\n\n    setTimeout(() => {\n      setCompleteGlobalState(\n        loadCharacterFromDatabase(characters, selectedCharacterId, initialState)\n      );\n      setScreen(SCREENS.FORM);\n    }, REFRESH_TIMER);\n  };\n\n  const handleSelectCharacter = (event) => {\n    setSelectedCharacterId(event.target.id);\n  };\n\n  return (\n    <Dialog\n      open={activeDialog === DIALOGS.IMPORT}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleCloseDialog}\n    >\n      <DialogTitle>Load Character</DialogTitle>\n      <DialogContent>\n        {isLoading ? (\n          <div className=\"import-list__loading\">\n            <CircularProgress />\n          </div>\n        ) : (\n          <ul className=\"import-list\">\n            {characters.map((character) => {\n              const selectedClass =\n                character.id === selectedCharacterId ? 'import-list__character--active' : '';\n              return (\n                <li key={character.id} className={`import-list__character ${selectedClass}`}>\n                  <button onClick={handleSelectCharacter} id={character.id}>\n                    <b>{character.name}</b>, a{' '}\n                    {getHashData(TYPES.RACE)[character.race].name ?? 'character'} created by{' '}\n                    {character.player}\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCloseDialog} color=\"secondary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={handleLoadCharacter}\n          color=\"primary\"\n          disabled={isLoading || !Boolean(selectedCharacterId)}\n        >\n          <OpenInBrowserIcon /> Load Character\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { forwardRef, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport PrintIcon from '@material-ui/icons/Print';\n\nimport useGlobalState, { getCompleteGlobalState } from '../useGlobalState';\nimport { DIALOGS } from '../utils/constants';\n\nimport { determineCharacterCompletion, getCharacterJsonApi } from '../utils';\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function PrintDialog() {\n  const [activeDialog, setActiveDialog] = useGlobalState('activeDialog');\n  const [characterObject, setCharacterObject] = useGlobalState('characterObject');\n  const [, setIsCharacterComplete] = useGlobalState('isCharacterComplete');\n  const [, setIsCharacterGenerated] = useGlobalState('isCharacterGenerated');\n\n  useEffect(() => {\n    try {\n      const referenceObj = getCompleteGlobalState();\n      setIsCharacterComplete(determineCharacterCompletion(referenceObj));\n      setCharacterObject(getCharacterJsonApi(referenceObj));\n      setIsCharacterGenerated(true);\n    } catch (err) {\n      console.error(err);\n      setIsCharacterGenerated(false);\n    }\n  }, []);\n\n  const handleCloseDialog = () => {\n    setActiveDialog(null);\n  };\n\n  const handlePrint = () => {\n    window.localStorage.setItem('roll-player-sheet', JSON.stringify(characterObject));\n    setActiveDialog(null);\n  };\n\n  return (\n    <Dialog\n      open={activeDialog === DIALOGS.PRINT}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleCloseDialog}\n    >\n      <DialogTitle>Print Character</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          You may print the character sheet for Roll Player or for Roll Player Adventures\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCloseDialog} color=\"secondary\">\n          Cancel\n        </Button>\n        <Button onClick={handlePrint} color=\"primary\" disabled>\n          <PrintIcon /> Print RPA\n        </Button>\n        <Button onClick={handlePrint} color=\"primary\" disabled>\n          <PrintIcon /> Print RP\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { forwardRef, useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport { API_FUNCTIONS } from '../firebase';\n\nimport useGlobalState, { getCompleteGlobalState } from '../useGlobalState';\nimport { DIALOGS } from '../utils/constants';\nimport { determineCharacterCompletion, deserializeCharacter } from '../utils';\n\nconst API = {\n  saveCharacter: API_FUNCTIONS.httpsCallable('postRollPlayerCharacter'),\n  updateCharacter: API_FUNCTIONS.httpsCallable('putRollPlayerCharacter'),\n};\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function SaveDialog() {\n  const [activeDialog, setActiveDialog] = useGlobalState('activeDialog');\n  const [characterId, setCharacterId] = useGlobalState('characterId');\n  const [deserializedCharacter, setDeserializedCharacter] = useGlobalState('deserializedCharacter');\n  const [isCharacterComplete, setIsCharacterComplete] = useGlobalState('isCharacterComplete');\n  const [, setIsCharacterGenerated] = useGlobalState('isCharacterGenerated');\n  // Local States\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [pw, setPW] = useState(null);\n  const [email, setEmail] = useState(null);\n\n  useEffect(() => {\n    try {\n      const referenceObj = getCompleteGlobalState();\n      setIsCharacterComplete(determineCharacterCompletion(referenceObj));\n      setDeserializedCharacter(deserializeCharacter(referenceObj));\n      setIsCharacterGenerated(true);\n    } catch (err) {\n      console.error(err);\n      setIsCharacterGenerated(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (pw && email) {\n      setIsLoggedIn(true);\n    }\n  }, [pw, email, setIsLoggedIn]);\n\n  const handleCloseDialog = () => {\n    setActiveDialog(null);\n  };\n\n  const handleSave = async () => {\n    try {\n      if (isCharacterComplete) {\n        let response;\n        if (characterId) {\n          response = await API.updateCharacter({\n            id: characterId,\n            ...deserializedCharacter,\n          });\n        } else {\n          response = await API.saveCharacter(deserializedCharacter);\n        }\n\n        setCharacterId(response.id);\n        setActiveDialog(null);\n      } else {\n        throw Error('Character is not complete');\n      }\n    } catch (err) {\n      console.error(err);\n      alert(err);\n    }\n  };\n\n  return (\n    <Dialog\n      open={activeDialog === DIALOGS.SAVE}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleCloseDialog}\n      className=\"\"\n    >\n      <DialogTitle>Save Character</DialogTitle>\n      <DialogContent>\n        {!isLoggedIn && (\n          <FormControl className=\"save-login-form\">\n            <h3>Login</h3>\n            <TextField\n              id=\"email\"\n              label=\"E-mail\"\n              onChange={(e) => setEmail(e.target.value)}\n              type=\"email\"\n            />\n            <TextField\n              id=\"password\"\n              label=\"Password\"\n              onChange={(e) => setPW(e.target.value)}\n              type=\"password\"\n            />\n            <Button onClick={handleCloseDialog} variant=\"contained\" color=\"primary\">\n              Login\n            </Button>\n          </FormControl>\n        )}\n      </DialogContent>\n      <DialogActions>\n        {!isCharacterComplete && (\n          <span className=\"dialog-alert\">This character sheet is incomplete</span>\n        )}\n        <Button onClick={handleCloseDialog} color=\"secondary\">\n          Close\n        </Button>\n        <Button onClick={handleSave} color=\"primary\" disabled={!isLoggedIn || !isCharacterComplete}>\n          <SaveIcon /> {characterId ? 'Update' : 'Save'}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\n\nimport Header from './Header';\n\nimport Form from './Form';\nimport Refreshing from './Refreshing';\n\nimport CodeDialog from './CodeDialog';\nimport ImportDialog from './ImportDialog';\nimport PrintDialog from './PrintDialog';\nimport SaveDialog from './SaveDialog';\n\nimport { DIALOGS, SCREENS } from '../utils/constants';\nimport useGlobalState from '../useGlobalState';\n\nconst activeComponent = {\n  [SCREENS.FORM]: <Form />,\n  [SCREENS.REFRESH]: <Refreshing />,\n};\n\nconst activeDialogComponent = {\n  [DIALOGS.CODE]: <CodeDialog />,\n  [DIALOGS.IMPORT]: <ImportDialog />,\n  [DIALOGS.PRINT]: <PrintDialog />,\n  [DIALOGS.SAVE]: <SaveDialog />,\n};\n\nexport default function App() {\n  const [screen] = useGlobalState('screen');\n  const [activeDialog] = useGlobalState('activeDialog');\n\n  return (\n    <Container maxWidth=\"lg\" className=\"app-container\">\n      <Header />\n      {activeComponent[screen]}\n      {activeDialogComponent[activeDialog]}\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport './stylesheets/index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}