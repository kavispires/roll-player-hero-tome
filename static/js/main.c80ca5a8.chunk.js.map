{"version":3,"sources":["serviceWorker.js","utils/constants.js","useGlobalState.js","components/Header.jsx","database/index.js","utils/index.js","components/FormInput.jsx","components/FormAutocomplete.jsx","components/FormAutocompleteMulti.jsx","components/FormAttributes.jsx","components/FormAlignment.jsx","components/Form.jsx","components/Refreshing.jsx","components/CodeDialog.jsx","firebase/index.js","components/ImportDialog.jsx","components/PrintDialog.jsx","components/SaveDialog.jsx","components/App.jsx","index.js"],"names":["Boolean","window","location","hostname","match","SCREENS","FORM","Symbol","PRINT","REFRESH","DIALOGS","CODE","IMPORT","SAVE","ATTRIBUTES","str","dex","con","int","wis","cha","TYPES","ALIGNMENT","ALIGNMENT_POSITION","BACKSTORY","CHARACTER_NAME","CLASS","DATE","FAMILIAR","FAMILIAR_POWER","FIENDS","GENDER","GOLD","MARKET_ARMOR","MARKET_WEAPON","MARKET_SKILL","MARKET_SCROLL","MARKET_TRAIT","MINION","MONSTER","MONSTER_ATTACK","MONSTER_LOCATION","MONSTER_OBSTACLE","PLAYER","RACE","SCORE","XP","GLOBAL_STATE_ALIAS","FORM_LABELS","initialState","screen","characterName","player","race","class","gender","backstory","attributes","alignment","alignmentPos","weapons","armor","skills","traits","scrolls","minions","xp","gold","score","date","familiar","familiarPower","fiends","monster","monsterLocation","monsterObstacle","monsterAttack","characterObject","deserializedCharacter","isCharacterGenerated","isCharacterComplete","activeDialog","isSavingEnabled","characterId","createGlobalState","useGlobalState","setGlobalStateCGS","setGlobalState","setState","resetGlobalState","setTimeout","getCompleteGlobalState","getState","Header","setActiveDialog","setIsSavingEnabled","useState","saveClickCount","setSaveClickCount","className","IconButton","aria-label","onClick","v","typeaheadCache","marketCahce","adventureCache","switcher","ALIGNMENTS","BACKSTORIES","CLASSES","FAMILIARS","GENDERS","filterDataByKind","MARKET","MINIONS","ADVENTURE","RACES","getTypeahead","type","undefined","data","typeheadData","Object","values","map","entry","value","id","text","name","sortedTypeaheadData","orderBy","getAdventureTypeahead","monsterName","reduce","acc","push","getHashData","kind","cache","forEach","card","getMonsterAdventureData","dict","typeahead","determineCharacterCompletion","objRef","some","attr","getCharacterJsonApi","character","getAttributeScores","getRPAAttributeScores","getAlignmentScore","items","sort","battle","obstacle","attack","power","counts","experience","health","getHealth","meta","Date","getCharacterTextString","result","getLine","length","separator","Array","fill","join","addSection","title","sLine","toUpperCase","addSubSection","ssLine","addText","addListItem","item","addList","list","console","log","i","titleLine","addTitle","attributesObj","raceId","rpAttributes","rpaAttributes","addDice","getCombinedAttributeScores","addLine","alignmentObj","num","addLineBreak","raceData","getAttrValue","val","alignmentId","position","aligmentData","split","Number","titles","0","1","2","3","4","5","6","7","8","fiendsCount","FormInput","inputType","classModifier","setEntry","FormControl","TextField","label","onChange","event","target","defaultValue","FormAutocomplete","isDisabled","entryDict","entryTypeahead","Autocomplete","options","getOptionLabel","option","getOptionSelected","renderInput","params","onInputChange","index","getAttribute","_","selectedEntry","disabled","autoHighlight","FormAutocompleteMulti","multiple","filterSelectedOptions","variant","newInput","ids","o","FormAttributes","entries","key","Attribute","modifier","setAttributes","total","s","readOnly","min","max","FormAlignment","setAlignment","setAlignmentPos","alignmentDict","alignmentTypeahead","handleChangeAlignmentPos","alignmentGridPlaceholder","alignmentModifiers","activeModifiers","activeClass","Form","adventureData","setAdventureData","useEffect","CircularProgressWithLabel","Box","display","CircularProgress","top","left","bottom","right","alignItems","justifyContent","Typography","component","color","Math","round","Refreshing","progress","setProgress","timer","setInterval","prevProgress","REFRESH_TIMER","clearInterval","Transition","forwardRef","props","ref","Slide","direction","CodeDialog","setCharacterObject","setIsCharacterComplete","setIsCharacterGenerated","referenceObj","err","error","handleCloseDialog","saveTextFile","useCallback","a","document","createElement","file","Blob","href","URL","createObjectURL","toLowerCase","download","click","Dialog","open","TransitionComponent","keepMounted","onClose","DialogTitle","DialogContent","JSON","stringify","DialogActions","Button","fb","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","API_FUNCTIONS","functions","API","database","getCharacters","httpsCallable","getCharacter","ImportDialog","isLoading","setIsLoading","selectedCharacter","characters","setCharacters","response","handleSelectCharacter","evt","localStorage","setItem","PrintDialog","handlePrint","DialogContentText","saveCharacter","updateCharacter","SaveDialog","setCharacterId","setDeserializedCharacter","isLoggedIn","setIsLoggedIn","pw","setPW","email","setEmail","deserializeCharacter","handleSave","Error","alert","e","activeComponent","activeDialogComponent","App","Container","maxWidth","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c80ca5a8.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const SCREENS = {\n  FORM: Symbol('FORM'),\n  PRINT: Symbol('PRINT'),\n  REFRESH: Symbol('REFRESH'),\n};\n\nexport const DIALOGS = {\n  CODE: Symbol('CODE'),\n  PRINT: Symbol('PRINT'),\n  IMPORT: Symbol('IMPORT'),\n  SAVE: Symbol('SAVE'),\n};\n\nexport const GENDERS = {\n  FEMALE: 'FEMALE',\n  MALE: 'MALE',\n  UNKNOWN: 'UNKNOWN',\n};\n\nexport const REFRESH_TIMER = 800;\n\nexport const ATTRIBUTES = {\n  str: 'Strength',\n  dex: 'Dexterity',\n  con: 'Constitution',\n  int: 'Intelligence',\n  wis: 'Wisdom',\n  cha: 'Charisma',\n};\n\nexport const TYPES = {\n  ALIGNMENT: Symbol('ALIGNMENT'),\n  ALIGNMENT_POSITION: Symbol('ALIGNMENT_POSITION'),\n  ATTRIBUTES: Symbol('ATTRIBUTES'),\n  BACKSTORY: Symbol('BACKSTORY'),\n  CHARACTER_NAME: Symbol('CHARACTER_NAME'),\n  CLASS: Symbol('CLASS'),\n  DATE: Symbol('DATE'),\n  FAMILIAR: Symbol('FAMILIAR'),\n  FAMILIAR_POWER: Symbol('FAMILIAR_POWER'),\n  FIENDS: Symbol('FIENDS'),\n  GENDER: Symbol('GENDER'),\n  GOLD: Symbol('GOLD'),\n  MARKET_ARMOR: Symbol('MARKET_ARMOR'),\n  MARKET_WEAPON: Symbol('MARKET_WEAPON'),\n  MARKET_SKILL: Symbol('MARKET_SKILL'),\n  MARKET_SCROLL: Symbol('MARKET_SCROLL'),\n  MARKET_TRAIT: Symbol('MARKET_TRAIT'),\n  MINION: Symbol('MINION'),\n  MONSTER: Symbol('MONSTER'),\n  MONSTER_ATTACK: Symbol('MONSTER_ATTACK'),\n  MONSTER_LOCATION: Symbol('MONSTER_LOCATION'),\n  MONSTER_OBSTACLE: Symbol('MONSTER_OBSTACLE'),\n  PLAYER: Symbol('PLAYER'),\n  RACE: Symbol('RACE'),\n  SCORE: Symbol('SCORE'),\n  XP: Symbol('XP'),\n};\n\nexport const GLOBAL_STATE_ALIAS = {\n  [TYPES.ALIGNMENT]: 'alignment',\n  [TYPES.ALIGNMENT_POSITION]: 'alignmentPos',\n  [TYPES.ATTRIBUTES]: 'attributes',\n  [TYPES.XP]: 'xp',\n  [TYPES.RACE]: 'race',\n  [TYPES.CLASS]: 'class',\n  [TYPES.CHARACTER_NAME]: 'characterName',\n  [TYPES.DATE]: 'date',\n  [TYPES.FAMILIAR]: 'familiar',\n  [TYPES.FAMILIAR_POWER]: 'familiarPower',\n  [TYPES.FIENDS]: 'fiends',\n  [TYPES.GENDER]: 'gender',\n  [TYPES.GOLD]: 'gold',\n  [TYPES.BACKSTORY]: 'backstory',\n  [TYPES.MARKET_ARMOR]: 'armor',\n  [TYPES.MARKET_WEAPON]: 'weapons',\n  [TYPES.MARKET_SKILL]: 'skills',\n  [TYPES.MARKET_SCROLL]: 'scrolls',\n  [TYPES.MARKET_TRAIT]: 'traits',\n  [TYPES.MINION]: 'minions',\n  [TYPES.MONSTER]: 'monster',\n  [TYPES.MONSTER_LOCATION]: 'monsterLocation',\n  [TYPES.MONSTER_OBSTACLE]: 'monsterObstacle',\n  [TYPES.MONSTER_ATTACK]: 'monsterAttack',\n  [TYPES.PLAYER]: 'player',\n  [TYPES.SCORE]: 'score',\n  [TYPES.XP]: 'xp',\n};\n\nexport const FORM_LABELS = {\n  [TYPES.RACE]: 'Race',\n  [TYPES.CLASS]: 'Class',\n  [TYPES.CHARACTER_NAME]: 'Character Name',\n  [TYPES.DATE]: 'Date',\n  [TYPES.FAMILIAR]: 'Familiar',\n  [TYPES.FAMILIAR_POWER]: 'Power',\n  [TYPES.FIENDS]: 'Fiends',\n  [TYPES.GENDER]: 'Gender',\n  [TYPES.GOLD]: 'Gold',\n  [TYPES.BACKSTORY]: 'Backstory',\n  [TYPES.MARKET_ARMOR]: 'Armor',\n  [TYPES.MARKET_WEAPON]: 'Weapons',\n  [TYPES.MARKET_SKILL]: 'Skills',\n  [TYPES.MARKET_SCROLL]: 'Scrolls',\n  [TYPES.MARKET_TRAIT]: 'Traits',\n  [TYPES.MINION]: 'Trophies (Minions)',\n  [TYPES.MONSTER]: 'Monster',\n  [TYPES.MONSTER_LOCATION]: 'Location',\n  [TYPES.MONSTER_OBSTACLE]: 'Obstacle',\n  [TYPES.MONSTER_ATTACK]: 'Attack',\n  [TYPES.PLAYER]: 'Player',\n  [TYPES.SCORE]: 'Score',\n  [TYPES.XP]: 'XP',\n};\n","import { createGlobalState } from 'react-hooks-global-state';\n\nimport { SCREENS, REFRESH_TIMER } from './utils/constants';\n\nconst initialState = {\n  screen: SCREENS.FORM,\n  characterName: '',\n  player: '',\n  race: null,\n  class: null,\n  gender: null,\n  backstory: null,\n  attributes: {\n    str: 0,\n    dex: 0,\n    con: 0,\n    int: 0,\n    wis: 0,\n    cha: 0,\n  },\n  alignment: null,\n  alignmentPos: 4,\n  weapons: [],\n  armor: [],\n  skills: [],\n  traits: [],\n  scrolls: [],\n  minions: [],\n  xp: 0,\n  gold: 0,\n  score: 0,\n  date: '2020-01-01',\n  familiar: null,\n  familiarPower: 0,\n  fiends: [],\n  monster: null,\n  monsterLocation: null,\n  monsterObstacle: null,\n  monsterAttack: null,\n  characterObject: null,\n  deserializedCharacter: null,\n  isCharacterGenerated: false,\n  isCharacterComplete: false,\n  activeDialog: null,\n  isSavingEnabled: false,\n  characterId: null,\n};\n\nconst { useGlobalState, setGlobalState: setGlobalStateCGS, setState, getState } = createGlobalState(\n  initialState\n);\n\nexport function resetGlobalState() {\n  setGlobalState('screen', SCREENS.REFRESH);\n  setTimeout(() => {\n    setState({ ...initialState });\n  }, REFRESH_TIMER);\n}\n\nexport const getCompleteGlobalState = getState;\n\nexport const setGlobalState = setGlobalStateCGS;\n\nexport default useGlobalState;\n","import React, { Fragment, useState } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PrintIcon from '@material-ui/icons/Print';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CodeIcon from '@material-ui/icons/Code';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\n\nimport useGlobalState, { resetGlobalState } from '../useGlobalState';\nimport { DIALOGS } from '../utils/constants';\n\nexport default function Header() {\n  const [, setActiveDialog] = useGlobalState('activeDialog');\n  const [isSavingEnabled, setIsSavingEnabled] = useGlobalState('isSavingEnabled');\n  // Local state\n  const [saveClickCount, setSaveClickCount] = useState(0);\n\n  const handleEditClick = () => {\n    if (!isSavingEnabled) {\n      setSaveClickCount((v) => ++v);\n      if (saveClickCount > 1) {\n        setIsSavingEnabled(true);\n      }\n    }\n  };\n\n  const handleOpenPrintDialog = () => {\n    setActiveDialog(DIALOGS.PRINT);\n  };\n\n  const handleOpenCodeDialog = () => {\n    setActiveDialog(DIALOGS.CODE);\n  };\n\n  const handleOpenImportDialog = () => {\n    setActiveDialog(DIALOGS.IMPORT);\n  };\n\n  const handleOpenSaveDialog = () => {\n    setActiveDialog(DIALOGS.SAVE);\n  };\n\n  return (\n    <header className=\"header\">\n      <IconButton className=\"header-button\" aria-label=\"reset\" onClick={resetGlobalState}>\n        <RotateLeftIcon />\n      </IconButton>\n      <h1 onClick={handleEditClick}>Roll Player Character Sheet</h1>\n      {isSavingEnabled && (\n        <Fragment>\n          <IconButton\n            className=\"header-button\"\n            aria-label=\"import\"\n            onClick={handleOpenImportDialog}\n          >\n            <ListAltIcon />\n          </IconButton>\n          <IconButton className=\"header-button\" aria-label=\"save\" onClick={handleOpenSaveDialog}>\n            <SaveIcon />\n          </IconButton>\n        </Fragment>\n      )}\n      <IconButton className=\"header-button\" aria-label=\"print\" onClick={handleOpenPrintDialog}>\n        <PrintIcon />\n      </IconButton>\n      <IconButton className=\"header-button\" aria-label=\"code\" onClick={handleOpenCodeDialog}>\n        <CodeIcon />\n      </IconButton>\n    </header>\n  );\n}\n","import { orderBy } from 'lodash-es';\n\n// Data\nimport ADVENTURE from './adventure.json';\nimport ALIGNMENTS from './alignments.json';\nimport BACKSTORIES from './backstories.json';\nimport CLASSES from './classes.json';\nimport FAMILIARS from './familiars.json';\nimport FIENDS from './fiends.json';\nimport GENDERS from './genders.json';\nimport MARKET from './market.json';\nimport MINIONS from './minions.json';\nimport MONSTER from './monsters.json';\nimport RACES from './races.json';\n\n// Utils\nimport { TYPES } from '../utils/constants';\n\nconst typeaheadCache = {};\nconst marketCahce = {};\nconst adventureCache = {};\n\nconst switcher = {\n  [TYPES.ALIGNMENT]: ALIGNMENTS,\n  [TYPES.BACKSTORY]: BACKSTORIES,\n  [TYPES.CLASS]: CLASSES,\n  [TYPES.FAMILIAR]: FAMILIARS,\n  [TYPES.FIENDS]: FIENDS,\n  [TYPES.GENDER]: GENDERS,\n  [TYPES.MARKET_ARMOR]: filterDataByKind('Armor', MARKET, marketCahce),\n  [TYPES.MARKET_SCROLL]: filterDataByKind('Scroll', MARKET, marketCahce),\n  [TYPES.MARKET_SKILL]: filterDataByKind('Skill', MARKET, marketCahce),\n  [TYPES.MARKET_TRAIT]: filterDataByKind('Trait', MARKET, marketCahce),\n  [TYPES.MARKET_WEAPON]: filterDataByKind('Weapon', MARKET, marketCahce),\n  [TYPES.MINION]: MINIONS,\n  [TYPES.MONSTER]: MONSTER,\n  [TYPES.MONSTER_LOCATION]: filterDataByKind('location', ADVENTURE, adventureCache),\n  [TYPES.MONSTER_OBSTACLE]: filterDataByKind('obstacle', ADVENTURE, adventureCache),\n  [TYPES.MONSTER_ATTACK]: filterDataByKind('attack', ADVENTURE, adventureCache),\n  [TYPES.RACE]: RACES,\n};\n\nexport function getTypeahead(type) {\n  if (typeaheadCache[type] === undefined) {\n    const data = switcher[type];\n\n    const typeheadData = Object.values(data).map((entry) => ({\n      value: entry.id,\n      text: entry.name,\n    }));\n\n    const sortedTypeaheadData = orderBy(typeheadData, 'text');\n\n    typeaheadCache[type] = sortedTypeaheadData;\n  }\n\n  return typeaheadCache[type];\n}\n\nexport function getAdventureTypeahead(data, monsterName) {\n  return Object.values(data).reduce((acc, entry) => {\n    if (entry.monster === monsterName) {\n      acc.push({\n        value: entry.id,\n        text: entry.name,\n      });\n    }\n    return acc;\n  }, []);\n}\n\nexport function getHashData(type) {\n  return switcher[type];\n}\n\nfunction filterDataByKind(kind, data, cache) {\n  if (cache[kind] === undefined) {\n    Object.values(data).forEach((card) => {\n      if (cache[card.kind] === undefined) {\n        cache[card.kind] = {};\n      }\n\n      cache[card.kind][card.id] = card;\n    });\n  }\n\n  return cache[kind];\n}\n","import { getHashData, getAdventureTypeahead } from '../database';\nimport { TYPES } from './constants';\n\nexport function getMonsterAdventureData(type, monsterName) {\n  const dict = getHashData(type);\n  return {\n    dict,\n    typeahead: getAdventureTypeahead(dict, monsterName),\n  };\n}\n\nexport function determineCharacterCompletion(objRef) {\n  // If text fields are empty\n  if (!objRef.characterName || !objRef.player) return false;\n\n  // If mandatory fields are empty\n  if (!objRef.race || !objRef.class || !objRef.backstory || !objRef.alignment) return false;\n\n  // If attributes are less than 3\n  if (Object.values(objRef.attributes).some((attr) => attr < 3)) return false;\n\n  // If monster, but no location, obstacle, or attack\n  if (\n    objRef.monster &&\n    (!objRef.monsterLocation || !objRef.monsterObstacle || !objRef.monsterAttack)\n  )\n    return false;\n\n  // If has familiar, but power is less then 3\n  if (objRef.familiar && !objRef.familiarPower) return false;\n\n  return true;\n}\n\nexport function deserializeCharacter(objRef) {\n  return {\n    id: objRef.characterId,\n    name: objRef.characterName,\n    race: objRef.race,\n    class: objRef.class,\n    gender: objRef.gender,\n    backstory: objRef.backstory,\n    'attribute-scores': objRef.attributes,\n    alignment: {\n      id: objRef.alignment,\n      position: objRef.alignmentPos,\n    },\n    items: {\n      armor: objRef.armor?.sort(),\n      weapons: objRef.weapons?.sort(),\n      scrolls: objRef.scrolls?.sort(),\n    },\n    skills: objRef.skills?.sort(),\n    traits: objRef.traits?.sort(),\n    battle: {\n      monster: objRef.monster,\n      location: objRef.monsterLocation,\n      obstacle: objRef.monsterObstacle,\n      attack: objRef.monsterAttack,\n      minions: objRef.minions?.sort(),\n    },\n    familiar: {\n      id: objRef.familiar,\n      power: objRef.familiarPower,\n    },\n    fiends: objRef.fiends?.sort(),\n    counts: {\n      experience: objRef.xp,\n      gold: objRef.gold,\n      score: objRef.score,\n    },\n    player: objRef.player,\n    'created-at': objRef.date ?? new Date(),\n  };\n}\n\nexport function getCharacterJsonApi(objRef) {\n  return {\n    id: objRef.character ?? null,\n    type: 'roll-player-character',\n    attributes: {\n      name: objRef.characterName,\n      race: getHashData(TYPES.RACE)[objRef.race]?.name ?? '',\n      class: getHashData(TYPES.CLASS)[objRef.class]?.name ?? '',\n      gender: getHashData(TYPES.GENDER)[objRef.gender]?.name ?? 'Unkown',\n      backstory: getHashData(TYPES.BACKSTORY)[objRef.backstory]?.name ?? '',\n      'attribute-rp-scores': getAttributeScores(objRef.attributes, objRef.race),\n      'attribute-rpa-scores': getRPAAttributeScores(objRef.attributes, objRef.race),\n      alignment: getAlignmentScore(objRef.alignment, objRef.alignmentPos),\n      items: {\n        armor: objRef.armor.map((id) => getHashData(TYPES.MARKET_ARMOR)[id]?.name ?? '').sort(),\n        weapons: objRef.weapons\n          .map((id) => getHashData(TYPES.MARKET_WEAPON)[id]?.name ?? '')\n          .sort(),\n        scrolls: objRef.scrolls\n          .map((id) => getHashData(TYPES.MARKET_SCROLL)[id]?.name ?? '')\n          .sort(),\n      },\n      skills: objRef.skills.map((id) => getHashData(TYPES.MARKET_SKILL)[id]?.name ?? '').sort(),\n      traits: objRef.traits.map((id) => getHashData(TYPES.MARKET_TRAIT)[id]?.name ?? '').sort(),\n      battle: {\n        monster: getHashData(TYPES.MONSTER)[objRef.monster]?.name ?? '',\n        location: getHashData(TYPES.MONSTER_LOCATION)[objRef.monsterLocation]?.name ?? '',\n        obstacle: getHashData(TYPES.MONSTER_OBSTACLE)[objRef.monsterObstacle]?.name ?? '',\n        attack: getHashData(TYPES.MONSTER_ATTACK)[objRef.monsterAttack]?.name ?? '',\n        minions: objRef.minions.map((id) => getHashData(TYPES.MINION)[id]?.name ?? '').sort(),\n      },\n      familiar: {\n        name: getHashData(TYPES.FAMILIAR)[objRef.familiar]?.name ?? '',\n        power: objRef.familiarPower,\n      },\n      fiends: objRef.fiends.map((id) => getHashData(TYPES.FIENDS)[id]?.name ?? '').sort(),\n      counts: {\n        experience: objRef.xp,\n        gold: objRef.gold,\n        score: objRef.score,\n        health: getHealth(objRef.score, objRef.fiends),\n      },\n    },\n    meta: {\n      'created-by': objRef.player,\n      'created-at': objRef.date ?? new Date(),\n    },\n  };\n}\n\nexport function getCharacterTextString(objRef) {\n  let result = '';\n\n  function getLine(length, separator = '-') {\n    return `${new Array(length).fill(separator).join('')}`;\n  }\n\n  function addLine(length = 15) {\n    result += getLine(length);\n  }\n\n  function addTitle(title) {\n    const titleLine = getLine(title.length, '=');\n    result += `\\n${titleLine}\\n${title.toUpperCase()}\\n${titleLine}\\n\\n`;\n  }\n\n  function addSection(title) {\n    const sLine = getLine(title.length, '-');\n    result += `\\n${sLine.toUpperCase()}\\n${title.toUpperCase()}\\n${sLine}\\n\\n`;\n  }\n\n  function addSubSection(title) {\n    const ssLine = getLine(title.length, '-');\n    result += `\\n${title.toUpperCase()}\\n${ssLine}\\n\\n`;\n  }\n\n  function addText(text) {\n    result += `${text}\\n`;\n  }\n\n  function addListItem(item) {\n    result += `    - ${item}\\n`;\n  }\n\n  function addList(list = []) {\n    console.log({ list });\n    if (list.length === 0) {\n      result += 'N/A\\n';\n    } else {\n      for (let i = 0; i < list.length; i++) {\n        addListItem(list[i]);\n      }\n    }\n  }\n\n  function addLineBreak(num = 1) {\n    for (let i = 0; i < num; i++) {\n      result += '\\n';\n    }\n  }\n\n  // BUILD\n  addTitle('Roll Player Hero Tome');\n  addText(`Created by ${objRef.player} on ${objRef.date}`);\n  addSection(`Character: ${objRef.characterName}`);\n  addText(`Race: ${getHashData(TYPES.RACE)[objRef.race]?.name}`);\n  addText(`Class: ${getHashData(TYPES.CLASS)[objRef.class]?.name}`);\n  addText(`Gender: ${getHashData(TYPES.GENDER)[objRef.gender]?.name}`);\n  addText(`Backstory: ${getHashData(TYPES.BACKSTORY)[objRef.backstory]?.name}`);\n  addSubSection('Attributes');\n  const attributesObj = getCombinedAttributeScores(objRef.attributes, objRef.race);\n  addText(`STR = ${attributesObj.str[1]} (${attributesObj.str[0]})`);\n  addText(`DEX = ${attributesObj.dex[1]} (${attributesObj.dex[0]})`);\n  addText(`CON = ${attributesObj.con[1]} (${attributesObj.con[0]})`);\n  addText(`INT = ${attributesObj.int[1]} (${attributesObj.int[0]})`);\n  addText(`WIS = ${attributesObj.wis[1]} (${attributesObj.wis[0]})`);\n  addText(`CHA = ${attributesObj.cha[1]} (${attributesObj.cha[0]})`);\n  if (attributesObj.addDice) {\n    addLine(\n      `\\n// Add ${attributesObj.addDice} to any attribute score before playing Roll Player Adventures`\n    );\n  }\n  addSubSection('Alignment');\n  const alignmentObj = getAlignmentScore(objRef.alignment, objRef.alignmentPos);\n  addText(`${alignmentObj.name} (${alignmentObj.title})`);\n  addText(`Points: ${alignmentObj.score}`);\n  addSection('Stats');\n  addListItem(`Health: ${getHealth(objRef.score, objRef.fiends)}`);\n  addListItem(`Experience: ${objRef.xp}`);\n  addListItem(`Gold: ${objRef.gold}`);\n  addSection('Items/Abilities');\n  addSubSection('Armor');\n  addList(objRef.armor.map((id) => getHashData(TYPES.MARKET_ARMOR)[id]?.name ?? '').sort());\n  addSubSection('Weapons');\n  addList(objRef.weapons.map((id) => getHashData(TYPES.MARKET_WEAPON)[id]?.name ?? '').sort());\n  addSubSection('Scrolls');\n  addList(objRef.scrolls.map((id) => getHashData(TYPES.MARKET_SCROLL)[id]?.name ?? '').sort());\n  addSubSection('Skills');\n  addList(objRef.skills.map((id) => getHashData(TYPES.MARKET_SKILL)[id]?.name ?? '').sort());\n  addSubSection('Traits');\n  addList(objRef.traits.map((id) => getHashData(TYPES.MARKET_TRAIT)[id]?.name ?? '').sort());\n  addSection('Familiar');\n  addText(\n    `${getHashData(TYPES.FAMILIAR)[objRef.familiar]?.name ?? ''} (Power: ${objRef.familiarPower})`\n  );\n  addSection('Enemies');\n  addSubSection(`Monter: ${getHashData(TYPES.MONSTER)[objRef.monster]?.name ?? ''}`);\n  addListItem(\n    `Location: ${getHashData(TYPES.MONSTER_LOCATION)[objRef.monsterLocation]?.name ?? ''}`\n  );\n  addListItem(\n    `Obstacle: ${getHashData(TYPES.MONSTER_OBSTACLE)[objRef.monsterObstacle]?.name ?? ''}`\n  );\n  addListItem(`Attack: ${getHashData(TYPES.MONSTER_ATTACK)[objRef.monsterAttack]?.name ?? ''}`);\n  addSubSection('Minions');\n  addList(objRef.minions.map((id) => getHashData(TYPES.MINION)[id]?.name ?? '').sort());\n  addSubSection('Fiends');\n  addList(objRef.fiends.map((id) => getHashData(TYPES.FIENDS)[id]?.name ?? '').sort());\n  addLineBreak(2);\n  addSection('Final Score');\n  addText(`${objRef.score} reputation stars`);\n  return result;\n}\n\nfunction getAttributeScores(attributes, raceId) {\n  const raceData = getHashData(TYPES.RACE)?.[raceId];\n\n  return {\n    str: (attributes.str ?? 0) + (raceData?.str ?? 0),\n    dex: (attributes.dex ?? 0) + (raceData?.dex ?? 0),\n    con: (attributes.con ?? 0) + (raceData?.con ?? 0),\n    int: (attributes.int ?? 0) + (raceData?.int ?? 0),\n    wis: (attributes.wis ?? 0) + (raceData?.wis ?? 0),\n    cha: (attributes.cha ?? 0) + (raceData?.cha ?? 0),\n  };\n}\n\nfunction getRPAAttributeScores(attributes, raceId) {\n  const rpAttributes = getAttributeScores(attributes, raceId);\n\n  function getAttrValue(val) {\n    if (val < 14) return 0;\n    if (val < 16) return 1;\n    if (val < 18) return 2;\n    return 3;\n  }\n\n  return {\n    str: getAttrValue(rpAttributes.str),\n    dex: getAttrValue(rpAttributes.dex),\n    con: getAttrValue(rpAttributes.con),\n    int: getAttrValue(rpAttributes.int),\n    wis: getAttrValue(rpAttributes.wis),\n    cha: getAttrValue(rpAttributes.cha),\n  };\n}\n\nfunction getCombinedAttributeScores(attributes, raceId) {\n  const rpAttributes = getAttributeScores(attributes, raceId);\n  const rpaAttributes = getRPAAttributeScores(attributes, raceId);\n\n  const addDice = Object.values(rpaAttributes).reduce((acc, entry) => {\n    acc -= entry;\n    if (acc < 0) acc = 0;\n    return acc;\n  }, 6);\n\n  console.log({ addDice });\n  return {\n    str: [rpAttributes.str, rpaAttributes.str],\n    dex: [rpAttributes.dex, rpaAttributes.dex],\n    con: [rpAttributes.con, rpaAttributes.con],\n    int: [rpAttributes.int, rpaAttributes.int],\n    wis: [rpAttributes.wis, rpaAttributes.wis],\n    cha: [rpAttributes.cha, rpaAttributes.cha],\n    addDice,\n  };\n}\n\nfunction getAlignmentScore(alignmentId, position = 4) {\n  const aligmentData = getHashData(TYPES.ALIGNMENT)?.[alignmentId];\n\n  const values = aligmentData?.values?.split(',').map(Number) ?? [];\n\n  const titles = {\n    0: 'Lawful-Good',\n    1: 'Neutral-Good',\n    2: 'Chaotic-Good',\n    3: 'Lawful-Neutral',\n    4: 'Neutraul-Neutral',\n    5: 'Chaotic-Neutral',\n    6: 'Lawful-Evil',\n    7: 'Neutral-Evil',\n    8: 'Chaotic-Evil',\n  };\n\n  return {\n    name: aligmentData?.name ?? '',\n    title: titles[position],\n    score: values[position],\n  };\n}\n\nfunction getHealth(score, fiends) {\n  const fiendsCount = fiends.length;\n\n  if (score < 21) return 14 - fiendsCount;\n  if (score < 26) return 15 - fiendsCount;\n  if (score < 36) return 16 - fiendsCount;\n  if (score < 41) return 17 - fiendsCount;\n  return 18 - fiendsCount;\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport { GLOBAL_STATE_ALIAS, FORM_LABELS } from '../utils/constants';\n\nimport useGlobalState from '../useGlobalState';\n\nexport default function FormInput({ type, inputType = 'text', classModifier = '' }) {\n  // Global States\n  const [entry, setEntry] = useGlobalState(GLOBAL_STATE_ALIAS[type]);\n\n  const handleChange = (event) => {\n    setEntry(event.target.value);\n  };\n\n  return (\n    <FormControl className={`form-item form-item--text form-item--${classModifier}`}>\n      <TextField\n        id={GLOBAL_STATE_ALIAS[type]}\n        label={FORM_LABELS[type]}\n        onChange={handleChange}\n        defaultValue={entry}\n        type={inputType}\n      />\n    </FormControl>\n  );\n}\n","import React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { getTypeahead, getHashData } from '../database';\nimport { GLOBAL_STATE_ALIAS, FORM_LABELS } from '../utils/constants';\n\nimport useGlobalState from '../useGlobalState';\n\nexport default function FormAutocomplete({\n  type,\n  classModifier = '',\n  data = null,\n  isDisabled = false,\n}) {\n  // Global States\n  const [entry, setEntry] = useGlobalState(GLOBAL_STATE_ALIAS[type]);\n\n  let entryDict = {};\n  let entryTypeahead = [];\n\n  if (data) {\n    entryDict = data.dict;\n    entryTypeahead = data.typeahead;\n  } else {\n    entryDict = getHashData(type);\n    entryTypeahead = getTypeahead(type);\n  }\n\n  const handleInputChange = (event) => {\n    const index = event.target.getAttribute('data-option-index');\n    if (entryTypeahead[index]) {\n      const id = entryTypeahead[index].value;\n      setEntry(id);\n    }\n  };\n\n  const handleChange = (_, selectedEntry) => {\n    if (entryDict[selectedEntry?.value]) {\n      setEntry(selectedEntry.value);\n    } else {\n      setEntry(null);\n    }\n  };\n\n  const label = FORM_LABELS[type];\n\n  return (\n    <FormControl className={`form-item form-item--autocomplete form-item--${classModifier}`}>\n      <Autocomplete\n        id={label}\n        options={entryTypeahead}\n        getOptionLabel={(option) => option.text}\n        getOptionSelected={(option) => option.value === entryDict?.[entry]?.id}\n        renderInput={(params) => <TextField {...params} label={label} />}\n        onInputChange={handleInputChange}\n        onChange={handleChange}\n        disabled={isDisabled}\n        autoHighlight\n      />\n    </FormControl>\n  );\n}\n","import React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { getTypeahead } from '../database';\nimport { GLOBAL_STATE_ALIAS, FORM_LABELS } from '../utils/constants';\n\nimport useGlobalState from '../useGlobalState';\n\nexport default function FormAutocompleteMulti({ type, classModifier = '' }) {\n  // Global States\n  const [, setEntry] = useGlobalState(GLOBAL_STATE_ALIAS[type]);\n\n  const entryTypeahead = getTypeahead(type);\n\n  const handleChange = (event, newInput) => {\n    const ids = newInput.map((o) => o.value);\n    setEntry(ids);\n  };\n\n  const label = FORM_LABELS[type];\n\n  return (\n    <FormControl className={`form-item form-item--autocomplete form-item--${classModifier}`}>\n      <Autocomplete\n        multiple\n        id={label}\n        options={entryTypeahead}\n        getOptionLabel={(option) => option.text}\n        filterSelectedOptions\n        renderInput={(params) => <TextField {...params} label={label} variant=\"outlined\" />}\n        onChange={handleChange}\n        autoHighlight\n      />\n    </FormControl>\n  );\n}\n","import React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport { getHashData } from '../database';\nimport { ATTRIBUTES, TYPES } from '../utils/constants';\n\nimport useGlobalState from '../useGlobalState';\n\nexport default function FormAttributes() {\n  // Global States\n  const [attributes] = useGlobalState('attributes');\n  const [race] = useGlobalState('race');\n\n  const raceData = getHashData(TYPES.RACE)?.[race];\n\n  return (\n    <FormControl className={`form-item form-item--attributes form-item--half`}>\n      <div className=\"attributes-grid attribute-header\">\n        <span className=\"attribute-header-label\">Attributes</span>\n        <span className=\"attribute-header--label\">Attribute Score</span>\n        <span className=\"attribute-sign invisible\">-</span>\n        <span className=\"attribute-header--label\">Racial Modifier</span>\n        <span className=\"attribute-sign invisible\">-</span>\n        <span className=\"attribute-header--label\">Total</span>\n      </div>\n      {Object.entries(ATTRIBUTES).map(([key, name]) => {\n        return (\n          <Attribute\n            key={key}\n            type={key}\n            name={name}\n            modifier={raceData?.[key]}\n            value={attributes[key]}\n            isDisabled={!Boolean(race)}\n          />\n        );\n      })}\n    </FormControl>\n  );\n}\n\nfunction Attribute({ type, name, modifier, value, isDisabled }) {\n  // Global States\n  const [, setAttributes] = useGlobalState('attributes');\n\n  const handleChange = (event) => {\n    setAttributes((s) => ({ ...s, [type]: +event.target.value }));\n  };\n\n  const total = (value ?? 0) + (modifier ?? 0);\n\n  return (\n    <div className=\"attributes-grid attribute\">\n      <label className=\"attribute-label\">\n        <span className=\"attribute-label__key\">{type}</span>\n        <span className=\"attribute-label__name\">{name}</span>\n      </label>\n      <input\n        type=\"number\"\n        className=\"attribute-score\"\n        disabled={isDisabled}\n        defaultValue={value}\n        onChange={handleChange}\n      />\n      <span className=\"attribute-sign\">+</span>\n      <input type=\"number\" className=\"attribute-race-modifier\" value={modifier ?? 0} readOnly />\n      <span className=\"attribute-sign\">=</span>\n      <input\n        type=\"number\"\n        className=\"attribute-race-total\"\n        value={total}\n        min=\"0\"\n        max=\"30\"\n        readOnly\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { getTypeahead, getHashData } from '../database';\nimport { TYPES } from '../utils/constants';\n\nimport useGlobalState from '../useGlobalState';\n\nexport default function FormAlignment() {\n  // Global States\n  const [alignment, setAlignment] = useGlobalState('alignment');\n  const [alignmentPos, setAlignmentPos] = useGlobalState('alignmentPos');\n\n  const alignmentDict = getHashData(TYPES.ALIGNMENT);\n  const alignmentTypeahead = getTypeahead(TYPES.ALIGNMENT);\n\n  const handleInputChange = (event) => {\n    const index = event.target.getAttribute('data-option-index');\n    if (alignmentTypeahead[index]) {\n      const id = alignmentTypeahead[index].value;\n      setAlignment(id);\n    }\n  };\n\n  const handleChange = (_, selectedEntry) => {\n    if (alignmentDict[selectedEntry?.value]) {\n      setAlignment(selectedEntry.value);\n    } else {\n      setAlignment(null);\n    }\n  };\n\n  const handleChangeAlignmentPos = (event) => {\n    setAlignmentPos(+event.target.id);\n  };\n\n  const alignmentGridPlaceholder = new Array(9).fill(0);\n\n  const alignmentModifiers = alignmentDict?.[alignment]?.values?.split(',').map(Number);\n\n  const activeModifiers = alignmentModifiers ?? alignmentGridPlaceholder;\n\n  return (\n    <FormControl className={`form-item form-item--alignment form-item--half`}>\n      <Autocomplete\n        id=\"alignment\"\n        options={alignmentTypeahead}\n        getOptionLabel={(option) => option.text}\n        getOptionSelected={(option) => option.value === alignmentDict?.[alignment]?.id}\n        renderInput={(params) => <TextField {...params} label=\"Alignment\" />}\n        onInputChange={handleInputChange}\n        onChange={handleChange}\n        autoHighlight\n      />\n      <div className=\"alignment-grid\">\n        <div className=\"alignment-grid__lawful\">Lawful</div>\n        <div className=\"alignment-grid__good\">Good</div>\n        <div className=\"alignment-grid__chaotic\">Chaotic</div>\n        <div className=\"alignment-grid__evil\">Evil</div>\n        <div className=\"alignment-grid__boxes\">\n          {activeModifiers.map((val, index) => {\n            const activeClass = alignmentPos === index ? 'alignment-box--active' : '';\n            return (\n              <button\n                className={`alignment-box ${activeClass}`}\n                id={`${index}`}\n                key={`al-key-${index}`}\n                onClick={handleChangeAlignmentPos}\n                disabled={!Boolean(alignment)}\n              >\n                {val}\n              </button>\n            );\n          })}\n        </div>\n      </div>\n    </FormControl>\n  );\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { getHashData } from '../database';\nimport { getMonsterAdventureData } from '../utils';\nimport { TYPES, GLOBAL_STATE_ALIAS } from '../utils/constants';\nimport useGlobalState from '../useGlobalState';\n\n// Components\nimport FormInput from './FormInput';\nimport FormAutocomplete from './FormAutocomplete';\nimport FormAutocompleteMulti from './FormAutocompleteMulti';\nimport FormAttributes from './FormAttributes';\nimport FormAlignment from './FormAlignment';\n\nexport default function Form() {\n  const [monster] = useGlobalState(GLOBAL_STATE_ALIAS[TYPES.MONSTER]);\n  // LocalState\n  const [adventureData, setAdventureData] = useState(null);\n\n  useEffect(() => {\n    if (monster) {\n      const monsterName = getHashData(TYPES.MONSTER)[monster].name;\n\n      setAdventureData({\n        location: getMonsterAdventureData(TYPES.MONSTER_LOCATION, monsterName),\n        obstacle: getMonsterAdventureData(TYPES.MONSTER_OBSTACLE, monsterName),\n        attack: getMonsterAdventureData(TYPES.MONSTER_ATTACK, monsterName),\n      });\n    }\n  }, [monster]);\n\n  return (\n    <main className=\"form\">\n      <FormInput type={TYPES.CHARACTER_NAME} classModifier=\"half\" />\n      <FormInput type={TYPES.PLAYER} classModifier=\"half\" />\n      <FormAutocomplete type={TYPES.RACE} classModifier=\"quarter\" />\n      <FormAutocomplete type={TYPES.CLASS} classModifier=\"quarter\" />\n      <FormAutocomplete type={TYPES.GENDER} classModifier=\"quarter\" />\n      <FormAutocomplete type={TYPES.BACKSTORY} classModifier=\"quarter\" />\n      <FormAttributes />\n      <FormAlignment />\n      <FormAutocompleteMulti type={TYPES.MARKET_ARMOR} classModifier=\"half\" />\n      <FormAutocompleteMulti type={TYPES.MARKET_WEAPON} classModifier=\"half\" />\n      <FormAutocompleteMulti type={TYPES.MARKET_SKILL} classModifier=\"half\" />\n      <FormAutocompleteMulti type={TYPES.MARKET_TRAIT} classModifier=\"half\" />\n      <FormAutocompleteMulti type={TYPES.MARKET_SCROLL} classModifier=\"half\" />\n      <FormAutocompleteMulti type={TYPES.MINION} classModifier=\"half\" />\n      <hr />\n      <FormAutocomplete type={TYPES.MONSTER} classModifier=\"quarter\" />\n      <FormAutocomplete\n        type={TYPES.MONSTER_LOCATION}\n        classModifier=\"quarter\"\n        isDisabled={!monster}\n        data={adventureData?.location}\n      />\n      <FormAutocomplete\n        type={TYPES.MONSTER_OBSTACLE}\n        classModifier=\"quarter\"\n        isDisabled={!monster}\n        data={adventureData?.obstacle}\n      />\n      <FormAutocomplete\n        type={TYPES.MONSTER_ATTACK}\n        classModifier=\"quarter\"\n        isDisabled={!monster}\n        data={adventureData?.attack}\n      />\n      <hr />\n      <FormAutocomplete type={TYPES.FAMILIAR} classModifier=\"quarter\" />\n      <FormInput type={TYPES.FAMILIAR_POWER} inputType=\"number\" classModifier=\"quarter\" />\n      <FormAutocompleteMulti type={TYPES.FIENDS} classModifier=\"half\" />\n      <hr />\n      <FormInput type={TYPES.XP} inputType=\"number\" classModifier=\"quarter\" />\n      <FormInput type={TYPES.GOLD} inputType=\"number\" classModifier=\"quarter\" />\n      <FormInput type={TYPES.SCORE} inputType=\"number\" classModifier=\"quarter\" />\n      <FormInput type={TYPES.DATE} inputType=\"date\" classModifier=\"quarter\" />\n    </main>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nimport { REFRESH_TIMER } from '../utils/constants';\n\nfunction CircularProgressWithLabel({ value }) {\n  console.log({ value });\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress variant=\"static\" value={value} />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\n          value\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nexport default function Refreshing() {\n  const [progress, setProgress] = useState(0);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress((prevProgress) => (prevProgress >= 100 ? 0 : prevProgress + 10));\n    }, REFRESH_TIMER / 10);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <main className=\"form form--refreshing\">\n      <CircularProgressWithLabel value={progress} />\n    </main>\n  );\n}\n","import React, { useCallback, useEffect, forwardRef } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\n\nimport useGlobalState, { getCompleteGlobalState } from '../useGlobalState';\nimport { DIALOGS } from '../utils/constants';\nimport {\n  determineCharacterCompletion,\n  getCharacterJsonApi,\n  getCharacterTextString,\n} from '../utils';\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function CodeDialog() {\n  const [activeDialog, setActiveDialog] = useGlobalState('activeDialog');\n  const [characterObject, setCharacterObject] = useGlobalState('characterObject');\n  const [isCharacterComplete, setIsCharacterComplete] = useGlobalState('isCharacterComplete');\n  const [, setIsCharacterGenerated] = useGlobalState('isCharacterGenerated');\n\n  useEffect(() => {\n    try {\n      const referenceObj = getCompleteGlobalState();\n      setIsCharacterComplete(determineCharacterCompletion(referenceObj));\n      setCharacterObject(getCharacterJsonApi(referenceObj));\n      setIsCharacterGenerated(true);\n    } catch (err) {\n      console.error(err);\n      setIsCharacterGenerated(false);\n    }\n  }, []);\n\n  const handleCloseDialog = () => {\n    setActiveDialog(null);\n  };\n\n  const saveTextFile = useCallback(() => {\n    const referenceObj = getCompleteGlobalState();\n    const a = document.createElement('a');\n    const file = new Blob([getCharacterTextString(referenceObj)], { type: 'text/plain' });\n    a.href = URL.createObjectURL(file);\n    const characterName = referenceObj.characterName?.toLowerCase() ?? 'untitled';\n    a.download = `${characterName}-hero-totem.txt`;\n    a.click();\n  }, []);\n\n  return (\n    <Dialog\n      open={activeDialog === DIALOGS.CODE}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleCloseDialog}\n    >\n      <DialogTitle>Character Sheet JSON</DialogTitle>\n      <DialogContent>\n        <pre>{JSON.stringify(characterObject, null, 4)}</pre>\n      </DialogContent>\n      <DialogActions>\n        {!isCharacterComplete && (\n          <span className=\"dialog-alert\">This character sheet is incomplete</span>\n        )}\n        <Button onClick={saveTextFile} color=\"primary\" disabled={!isCharacterComplete}>\n          <CloudDownloadIcon /> Download\n        </Button>\n        <Button onClick={handleCloseDialog} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/functions';\n\nconst config = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\n\nconst fb = firebase.initializeApp(config);\n\nexport const API_FUNCTIONS = fb.functions();\n\nexport default fb.database();\n","import React, { forwardRef, useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { API_FUNCTIONS } from '../firebase';\n\nimport useGlobalState, { getCompleteGlobalState } from '../useGlobalState';\nimport { DIALOGS, TYPES } from '../utils/constants';\n\nimport { determineCharacterCompletion, getCharacterJsonApi } from '../utils';\nimport { getHashData } from '../database';\n\nconst API = {\n  getCharacters: API_FUNCTIONS.httpsCallable('getRollPlayerCharacters'),\n  getCharacter: API_FUNCTIONS.httpsCallable('getRollPlayerCharacter'),\n};\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function ImportDialog() {\n  const [activeDialog, setActiveDialog] = useGlobalState('activeDialog');\n  const [characterObject, setCharacterObject] = useGlobalState('characterObject');\n  const [isCharacterComplete, setIsCharacterComplete] = useGlobalState('isCharacterComplete');\n  const [, setIsCharacterGenerated] = useGlobalState('isCharacterGenerated');\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedCharacter, setSelectedCharacter] = useState(null);\n  const [characters, setCharacters] = useState([]);\n\n  useEffect(() => {\n    try {\n      setIsLoading(true);\n      async function getCharacters() {\n        const response = await API.getCharacters();\n        setCharacters(response.data);\n      }\n      getCharacters();\n    } catch (err) {\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const handleCloseDialog = () => {\n    setActiveDialog(null);\n  };\n\n  const handlePrint = () => {\n    window.localStorage.setItem('roll-player-sheet', JSON.stringify(characterObject));\n    setActiveDialog(null);\n  };\n\n  const handleSelectCharacter = (evt) => {\n    console.log(evt);\n    // setSelectedCharacter()\n  };\n\n  return (\n    <Dialog\n      open={activeDialog === DIALOGS.IMPORT}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleCloseDialog}\n    >\n      <DialogTitle>Load Character</DialogTitle>\n      <DialogContent>\n        {isLoading ? (\n          <div className=\"import-list__loading\">\n            <CircularProgress />\n          </div>\n        ) : (\n          <ul className=\"import-list\">\n            {characters.map((character) => {\n              return (\n                <li key={character.id} className=\"import-list__character\">\n                  <button onClick={handleSelectCharacter} id={character.id}>\n                    <b>{character.name}</b>, a{' '}\n                    {getHashData(TYPES.RACE)[character.race].name ?? 'character'} created by{' '}\n                    {character.player}\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCloseDialog} color=\"secondary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={handlePrint}\n          color=\"primary\"\n          disabled={!isLoading || !Boolean(selectedCharacter)}\n        >\n          <OpenInBrowserIcon /> Load Character\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { forwardRef, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport PrintIcon from '@material-ui/icons/Print';\n\nimport useGlobalState, { getCompleteGlobalState } from '../useGlobalState';\nimport { DIALOGS } from '../utils/constants';\n\nimport { determineCharacterCompletion, getCharacterJsonApi } from '../utils';\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function PrintDialog() {\n  const [activeDialog, setActiveDialog] = useGlobalState('activeDialog');\n  const [characterObject, setCharacterObject] = useGlobalState('characterObject');\n  const [, setIsCharacterComplete] = useGlobalState('isCharacterComplete');\n  const [, setIsCharacterGenerated] = useGlobalState('isCharacterGenerated');\n\n  useEffect(() => {\n    try {\n      const referenceObj = getCompleteGlobalState();\n      setIsCharacterComplete(determineCharacterCompletion(referenceObj));\n      setCharacterObject(getCharacterJsonApi(referenceObj));\n      setIsCharacterGenerated(true);\n    } catch (err) {\n      console.error(err);\n      setIsCharacterGenerated(false);\n    }\n  }, []);\n\n  const handleCloseDialog = () => {\n    setActiveDialog(null);\n  };\n\n  const handlePrint = () => {\n    window.localStorage.setItem('roll-player-sheet', JSON.stringify(characterObject));\n    setActiveDialog(null);\n  };\n\n  return (\n    <Dialog\n      open={activeDialog === DIALOGS.PRINT}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleCloseDialog}\n    >\n      <DialogTitle>Print Character</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          You may print the character sheet for Roll Player or for Roll Player Adventures\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCloseDialog} color=\"secondary\">\n          Cancel\n        </Button>\n        <Button onClick={handlePrint} color=\"primary\" disabled>\n          <PrintIcon /> Print RPA\n        </Button>\n        <Button onClick={handlePrint} color=\"primary\" disabled>\n          <PrintIcon /> Print RP\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { forwardRef, useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport { API_FUNCTIONS } from '../firebase';\n\nimport useGlobalState, { getCompleteGlobalState } from '../useGlobalState';\nimport { DIALOGS } from '../utils/constants';\nimport { determineCharacterCompletion, deserializeCharacter } from '../utils';\n\nconst API = {\n  saveCharacter: API_FUNCTIONS.httpsCallable('postRollPlayerCharacter'),\n  updateCharacter: API_FUNCTIONS.httpsCallable('putRollPlayerCharacter'),\n};\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function SaveDialog() {\n  const [activeDialog, setActiveDialog] = useGlobalState('activeDialog');\n  const [characterId, setCharacterId] = useGlobalState('characterId');\n  const [deserializedCharacter, setDeserializedCharacter] = useGlobalState('deserializedCharacter');\n  const [isCharacterComplete, setIsCharacterComplete] = useGlobalState('isCharacterComplete');\n  const [, setIsCharacterGenerated] = useGlobalState('isCharacterGenerated');\n  // Local States\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [pw, setPW] = useState(null);\n  const [email, setEmail] = useState(null);\n\n  useEffect(() => {\n    try {\n      const referenceObj = getCompleteGlobalState();\n      setIsCharacterComplete(determineCharacterCompletion(referenceObj));\n      setDeserializedCharacter(deserializeCharacter(referenceObj));\n      setIsCharacterGenerated(true);\n    } catch (err) {\n      console.error(err);\n      setIsCharacterGenerated(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (pw && email) {\n      setIsLoggedIn(true);\n    }\n  }, [pw, email, setIsLoggedIn]);\n\n  const handleCloseDialog = () => {\n    setActiveDialog(null);\n  };\n\n  const handleSave = async () => {\n    try {\n      if (isCharacterComplete) {\n        let response;\n        if (characterId) {\n          response = await API.updateCharacter({\n            id: characterId,\n            ...deserializedCharacter,\n          });\n        } else {\n          response = await API.saveCharacter(deserializedCharacter);\n        }\n\n        setCharacterId(response.id);\n        setActiveDialog(null);\n      } else {\n        throw Error('Character is not complete');\n      }\n    } catch (err) {\n      console.error(err);\n      alert(err);\n    }\n  };\n\n  return (\n    <Dialog\n      open={activeDialog === DIALOGS.SAVE}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleCloseDialog}\n      className=\"\"\n    >\n      <DialogTitle>Save Character</DialogTitle>\n      <DialogContent>\n        {!isLoggedIn && (\n          <FormControl className=\"save-login-form\">\n            <h3>Login</h3>\n            <TextField\n              id=\"email\"\n              label=\"E-mail\"\n              onChange={(e) => setEmail(e.target.value)}\n              type=\"email\"\n            />\n            <TextField\n              id=\"password\"\n              label=\"Password\"\n              onChange={(e) => setPW(e.target.value)}\n              type=\"password\"\n            />\n            <Button onClick={handleCloseDialog} variant=\"contained\" color=\"primary\">\n              Login\n            </Button>\n          </FormControl>\n        )}\n      </DialogContent>\n      <DialogActions>\n        {!isCharacterComplete && (\n          <span className=\"dialog-alert\">This character sheet is incomplete</span>\n        )}\n        <Button onClick={handleCloseDialog} color=\"secondary\">\n          Close\n        </Button>\n        <Button onClick={handleSave} color=\"primary\" disabled={!isLoggedIn || !isCharacterComplete}>\n          <SaveIcon /> {characterId ? 'Update' : 'Save'}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\n\nimport Header from './Header';\n\nimport Form from './Form';\nimport Refreshing from './Refreshing';\n\nimport CodeDialog from './CodeDialog';\nimport ImportDialog from './ImportDialog';\nimport PrintDialog from './PrintDialog';\nimport SaveDialog from './SaveDialog';\n\nimport { DIALOGS, SCREENS } from '../utils/constants';\nimport useGlobalState from '../useGlobalState';\n\nconst activeComponent = {\n  [SCREENS.FORM]: <Form />,\n  [SCREENS.REFRESH]: <Refreshing />,\n};\n\nconst activeDialogComponent = {\n  [DIALOGS.CODE]: <CodeDialog />,\n  [DIALOGS.IMPORT]: <ImportDialog />,\n  [DIALOGS.PRINT]: <PrintDialog />,\n  [DIALOGS.SAVE]: <SaveDialog />,\n};\n\nexport default function App() {\n  const [screen] = useGlobalState('screen');\n  const [activeDialog] = useGlobalState('activeDialog');\n\n  return (\n    <Container maxWidth=\"lg\" className=\"app-container\">\n      <Header />\n      {activeComponent[screen]}\n      {activeDialogComponent[activeDialog]}\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport './stylesheets/index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}